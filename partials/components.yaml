openapi: 3.0.3
info:
  title: Unofficial Lemmy Documentation
  version: ignored
  x-id: partials/components.yaml
  x-comment: >-
    Generated from partials/auto_gen_types.ts by core-types-json-schema
    (https://github.com/grantila/core-types-json-schema) on behalf of typeconv
    (https://github.com/grantila/typeconv)
paths: {}
components:
  schemas:
    ActivityId:
      title: ActivityId
      type: integer
    AddAdmin:
      properties:
        person_id:
          $ref: '#/components/schemas/PersonId'
          title: AddAdmin.person_id
        added:
          title: AddAdmin.added
          type: boolean
      required:
        - person_id
        - added
      additionalProperties: false
      title: AddAdmin
      type: object
    AddAdminResponse:
      properties:
        admins:
          items:
            $ref: '#/components/schemas/PersonView'
          title: AddAdminResponse.admins
          type: array
      required:
        - admins
      additionalProperties: false
      title: AddAdminResponse
      type: object
    AddModToCommunity:
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: AddModToCommunity.community_id
        person_id:
          $ref: '#/components/schemas/PersonId'
          title: AddModToCommunity.person_id
        added:
          title: AddModToCommunity.added
          type: boolean
      required:
        - community_id
        - person_id
        - added
      additionalProperties: false
      title: AddModToCommunity
      type: object
    AddModToCommunityResponse:
      properties:
        moderators:
          items:
            $ref: '#/components/schemas/CommunityModeratorView'
          title: AddModToCommunityResponse.moderators
          type: array
      required:
        - moderators
      additionalProperties: false
      title: AddModToCommunityResponse
      type: object
    AdminPurgeComment:
      properties:
        id:
          title: AdminPurgeComment.id
          type: integer
        admin_person_id:
          $ref: '#/components/schemas/PersonId'
          title: AdminPurgeComment.admin_person_id
        post_id:
          $ref: '#/components/schemas/PostId'
          title: AdminPurgeComment.post_id
        reason:
          title: AdminPurgeComment.reason
          type: string
        when_:
          title: AdminPurgeComment.when_
          type: string
      required:
        - id
        - admin_person_id
        - post_id
        - when_
      additionalProperties: false
      title: AdminPurgeComment
      type: object
    AdminPurgeCommentView:
      properties:
        admin_purge_comment:
          $ref: '#/components/schemas/AdminPurgeComment'
          title: AdminPurgeCommentView.admin_purge_comment
        admin:
          $ref: '#/components/schemas/Person'
          title: AdminPurgeCommentView.admin
        post:
          $ref: '#/components/schemas/Post'
          title: AdminPurgeCommentView.post
      required:
        - admin_purge_comment
        - post
      additionalProperties: false
      title: AdminPurgeCommentView
      type: object
    AdminPurgeCommunity:
      properties:
        id:
          title: AdminPurgeCommunity.id
          type: integer
        admin_person_id:
          $ref: '#/components/schemas/PersonId'
          title: AdminPurgeCommunity.admin_person_id
        reason:
          title: AdminPurgeCommunity.reason
          type: string
        when_:
          title: AdminPurgeCommunity.when_
          type: string
      required:
        - id
        - admin_person_id
        - when_
      additionalProperties: false
      title: AdminPurgeCommunity
      type: object
    AdminPurgeCommunityView:
      properties:
        admin_purge_community:
          $ref: '#/components/schemas/AdminPurgeCommunity'
          title: AdminPurgeCommunityView.admin_purge_community
        admin:
          $ref: '#/components/schemas/Person'
          title: AdminPurgeCommunityView.admin
      required:
        - admin_purge_community
      additionalProperties: false
      title: AdminPurgeCommunityView
      type: object
    AdminPurgePerson:
      properties:
        id:
          title: AdminPurgePerson.id
          type: integer
        admin_person_id:
          $ref: '#/components/schemas/PersonId'
          title: AdminPurgePerson.admin_person_id
        reason:
          title: AdminPurgePerson.reason
          type: string
        when_:
          title: AdminPurgePerson.when_
          type: string
      required:
        - id
        - admin_person_id
        - when_
      additionalProperties: false
      title: AdminPurgePerson
      type: object
    AdminPurgePersonView:
      properties:
        admin_purge_person:
          $ref: '#/components/schemas/AdminPurgePerson'
          title: AdminPurgePersonView.admin_purge_person
        admin:
          $ref: '#/components/schemas/Person'
          title: AdminPurgePersonView.admin
      required:
        - admin_purge_person
      additionalProperties: false
      title: AdminPurgePersonView
      type: object
    AdminPurgePost:
      properties:
        id:
          title: AdminPurgePost.id
          type: integer
        admin_person_id:
          $ref: '#/components/schemas/PersonId'
          title: AdminPurgePost.admin_person_id
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: AdminPurgePost.community_id
        reason:
          title: AdminPurgePost.reason
          type: string
        when_:
          title: AdminPurgePost.when_
          type: string
      required:
        - id
        - admin_person_id
        - community_id
        - when_
      additionalProperties: false
      title: AdminPurgePost
      type: object
    AdminPurgePostView:
      properties:
        admin_purge_post:
          $ref: '#/components/schemas/AdminPurgePost'
          title: AdminPurgePostView.admin_purge_post
        admin:
          $ref: '#/components/schemas/Person'
          title: AdminPurgePostView.admin
        community:
          $ref: '#/components/schemas/Community'
          title: AdminPurgePostView.community
      required:
        - admin_purge_post
        - community
      additionalProperties: false
      title: AdminPurgePostView
      type: object
    ApproveRegistrationApplication:
      properties:
        id:
          $ref: '#/components/schemas/RegistrationApplicationId'
          title: ApproveRegistrationApplication.id
        approve:
          title: ApproveRegistrationApplication.approve
          type: boolean
        deny_reason:
          title: ApproveRegistrationApplication.deny_reason
          type: string
      required:
        - id
        - approve
      additionalProperties: false
      title: ApproveRegistrationApplication
      type: object
    BanFromCommunity:
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: BanFromCommunity.community_id
        person_id:
          $ref: '#/components/schemas/PersonId'
          title: BanFromCommunity.person_id
        ban:
          title: BanFromCommunity.ban
          type: boolean
        remove_data:
          title: BanFromCommunity.remove_data
          type: boolean
        reason:
          title: BanFromCommunity.reason
          type: string
        expires:
          title: BanFromCommunity.expires
          type: integer
      required:
        - community_id
        - person_id
        - ban
      additionalProperties: false
      title: BanFromCommunity
      type: object
    BanFromCommunityResponse:
      properties:
        person_view:
          $ref: '#/components/schemas/PersonView'
          title: BanFromCommunityResponse.person_view
        banned:
          title: BanFromCommunityResponse.banned
          type: boolean
      required:
        - person_view
        - banned
      additionalProperties: false
      title: BanFromCommunityResponse
      type: object
    BanPerson:
      properties:
        person_id:
          $ref: '#/components/schemas/PersonId'
          title: BanPerson.person_id
        ban:
          title: BanPerson.ban
          type: boolean
        remove_data:
          title: BanPerson.remove_data
          type: boolean
        reason:
          title: BanPerson.reason
          type: string
        expires:
          title: BanPerson.expires
          type: integer
      required:
        - person_id
        - ban
      additionalProperties: false
      title: BanPerson
      type: object
    BanPersonResponse:
      properties:
        person_view:
          $ref: '#/components/schemas/PersonView'
          title: BanPersonResponse.person_view
        banned:
          title: BanPersonResponse.banned
          type: boolean
      required:
        - person_view
        - banned
      additionalProperties: false
      title: BanPersonResponse
      type: object
    BannedPersonsResponse:
      properties:
        banned:
          items:
            $ref: '#/components/schemas/PersonView'
          title: BannedPersonsResponse.banned
          type: array
      required:
        - banned
      additionalProperties: false
      title: BannedPersonsResponse
      type: object
    BlockCommunity:
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: BlockCommunity.community_id
        block:
          title: BlockCommunity.block
          type: boolean
      required:
        - community_id
        - block
      additionalProperties: false
      title: BlockCommunity
      type: object
    BlockCommunityResponse:
      properties:
        community_view:
          $ref: '#/components/schemas/CommunityView'
          title: BlockCommunityResponse.community_view
        blocked:
          title: BlockCommunityResponse.blocked
          type: boolean
      required:
        - community_view
        - blocked
      additionalProperties: false
      title: BlockCommunityResponse
      type: object
    BlockInstance:
      properties:
        instance_id:
          $ref: '#/components/schemas/InstanceId'
          title: BlockInstance.instance_id
        block:
          title: BlockInstance.block
          type: boolean
      required:
        - instance_id
        - block
      additionalProperties: false
      title: BlockInstance
      type: object
    BlockInstanceResponse:
      properties:
        blocked:
          title: BlockInstanceResponse.blocked
          type: boolean
      required:
        - blocked
      additionalProperties: false
      title: BlockInstanceResponse
      type: object
    BlockPerson:
      properties:
        person_id:
          $ref: '#/components/schemas/PersonId'
          title: BlockPerson.person_id
        block:
          title: BlockPerson.block
          type: boolean
      required:
        - person_id
        - block
      additionalProperties: false
      title: BlockPerson
      type: object
    BlockPersonResponse:
      properties:
        person_view:
          $ref: '#/components/schemas/PersonView'
          title: BlockPersonResponse.person_view
        blocked:
          title: BlockPersonResponse.blocked
          type: boolean
      required:
        - person_view
        - blocked
      additionalProperties: false
      title: BlockPersonResponse
      type: object
    CaptchaResponse:
      properties:
        png:
          title: CaptchaResponse.png
          type: string
        wav:
          title: CaptchaResponse.wav
          type: string
        uuid:
          title: CaptchaResponse.uuid
          type: string
      required:
        - png
        - wav
        - uuid
      additionalProperties: false
      title: CaptchaResponse
      type: object
    ChangePassword:
      properties:
        new_password:
          title: ChangePassword.new_password
          type: string
        new_password_verify:
          title: ChangePassword.new_password_verify
          type: string
        old_password:
          title: ChangePassword.old_password
          type: string
      required:
        - new_password
        - new_password_verify
        - old_password
      additionalProperties: false
      title: ChangePassword
      type: object
    Comment:
      properties:
        id:
          $ref: '#/components/schemas/CommentId'
          title: Comment.id
        creator_id:
          $ref: '#/components/schemas/PersonId'
          title: Comment.creator_id
        post_id:
          $ref: '#/components/schemas/PostId'
          title: Comment.post_id
        content:
          title: Comment.content
          type: string
        removed:
          title: Comment.removed
          type: boolean
        published:
          title: Comment.published
          type: string
        updated:
          title: Comment.updated
          type: string
        deleted:
          title: Comment.deleted
          type: boolean
        ap_id:
          title: Comment.ap_id
          type: string
        local:
          title: Comment.local
          type: boolean
        path:
          title: Comment.path
          type: string
        distinguished:
          title: Comment.distinguished
          type: boolean
        language_id:
          $ref: '#/components/schemas/LanguageId'
          title: Comment.language_id
      required:
        - id
        - creator_id
        - post_id
        - content
        - removed
        - published
        - deleted
        - ap_id
        - local
        - path
        - distinguished
        - language_id
      additionalProperties: false
      title: Comment
      type: object
    CommentAggregates:
      properties:
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: CommentAggregates.comment_id
        score:
          title: CommentAggregates.score
          type: integer
        upvotes:
          title: CommentAggregates.upvotes
          type: integer
        downvotes:
          title: CommentAggregates.downvotes
          type: integer
        published:
          title: CommentAggregates.published
          type: string
        child_count:
          title: CommentAggregates.child_count
          type: integer
      required:
        - comment_id
        - score
        - upvotes
        - downvotes
        - published
        - child_count
      additionalProperties: false
      title: CommentAggregates
      type: object
    CommentId:
      title: CommentId
      type: integer
    CommentReply:
      properties:
        id:
          $ref: '#/components/schemas/CommentReplyId'
          title: CommentReply.id
        recipient_id:
          $ref: '#/components/schemas/PersonId'
          title: CommentReply.recipient_id
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: CommentReply.comment_id
        read:
          title: CommentReply.read
          type: boolean
        published:
          title: CommentReply.published
          type: string
      required:
        - id
        - recipient_id
        - comment_id
        - read
        - published
      additionalProperties: false
      title: CommentReply
      type: object
    CommentReplyId:
      title: CommentReplyId
      type: integer
    CommentReplyResponse:
      properties:
        comment_reply_view:
          $ref: '#/components/schemas/CommentReplyView'
          title: CommentReplyResponse.comment_reply_view
      required:
        - comment_reply_view
      additionalProperties: false
      title: CommentReplyResponse
      type: object
    CommentReplyView:
      properties:
        comment_reply:
          $ref: '#/components/schemas/CommentReply'
          title: CommentReplyView.comment_reply
        comment:
          $ref: '#/components/schemas/Comment'
          title: CommentReplyView.comment
        creator:
          $ref: '#/components/schemas/Person'
          title: CommentReplyView.creator
        post:
          $ref: '#/components/schemas/Post'
          title: CommentReplyView.post
        community:
          $ref: '#/components/schemas/Community'
          title: CommentReplyView.community
        recipient:
          $ref: '#/components/schemas/Person'
          title: CommentReplyView.recipient
        counts:
          $ref: '#/components/schemas/CommentAggregates'
          title: CommentReplyView.counts
        creator_banned_from_community:
          title: CommentReplyView.creator_banned_from_community
          type: boolean
        banned_from_community:
          title: CommentReplyView.banned_from_community
          type: boolean
        creator_is_moderator:
          title: CommentReplyView.creator_is_moderator
          type: boolean
        creator_is_admin:
          title: CommentReplyView.creator_is_admin
          type: boolean
        subscribed:
          $ref: '#/components/schemas/SubscribedType'
          title: CommentReplyView.subscribed
        saved:
          title: CommentReplyView.saved
          type: boolean
        creator_blocked:
          title: CommentReplyView.creator_blocked
          type: boolean
        my_vote:
          title: CommentReplyView.my_vote
          type: integer
      required:
        - comment_reply
        - comment
        - creator
        - post
        - community
        - recipient
        - counts
        - creator_banned_from_community
        - banned_from_community
        - creator_is_moderator
        - creator_is_admin
        - subscribed
        - saved
        - creator_blocked
      additionalProperties: false
      title: CommentReplyView
      type: object
    CommentReport:
      properties:
        id:
          $ref: '#/components/schemas/CommentReportId'
          title: CommentReport.id
        creator_id:
          $ref: '#/components/schemas/PersonId'
          title: CommentReport.creator_id
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: CommentReport.comment_id
        original_comment_text:
          title: CommentReport.original_comment_text
          type: string
        reason:
          title: CommentReport.reason
          type: string
        resolved:
          title: CommentReport.resolved
          type: boolean
        resolver_id:
          $ref: '#/components/schemas/PersonId'
          title: CommentReport.resolver_id
        published:
          title: CommentReport.published
          type: string
        updated:
          title: CommentReport.updated
          type: string
      required:
        - id
        - creator_id
        - comment_id
        - original_comment_text
        - reason
        - resolved
        - published
      additionalProperties: false
      title: CommentReport
      type: object
    CommentReportId:
      title: CommentReportId
      type: integer
    CommentReportResponse:
      properties:
        comment_report_view:
          $ref: '#/components/schemas/CommentReportView'
          title: CommentReportResponse.comment_report_view
      required:
        - comment_report_view
      additionalProperties: false
      title: CommentReportResponse
      type: object
    CommentReportView:
      properties:
        comment_report:
          $ref: '#/components/schemas/CommentReport'
          title: CommentReportView.comment_report
        comment:
          $ref: '#/components/schemas/Comment'
          title: CommentReportView.comment
        post:
          $ref: '#/components/schemas/Post'
          title: CommentReportView.post
        community:
          $ref: '#/components/schemas/Community'
          title: CommentReportView.community
        creator:
          $ref: '#/components/schemas/Person'
          title: CommentReportView.creator
        comment_creator:
          $ref: '#/components/schemas/Person'
          title: CommentReportView.comment_creator
        counts:
          $ref: '#/components/schemas/CommentAggregates'
          title: CommentReportView.counts
        creator_banned_from_community:
          title: CommentReportView.creator_banned_from_community
          type: boolean
        creator_is_moderator:
          title: CommentReportView.creator_is_moderator
          type: boolean
        creator_is_admin:
          title: CommentReportView.creator_is_admin
          type: boolean
        creator_blocked:
          title: CommentReportView.creator_blocked
          type: boolean
        subscribed:
          $ref: '#/components/schemas/SubscribedType'
          title: CommentReportView.subscribed
        saved:
          title: CommentReportView.saved
          type: boolean
        my_vote:
          title: CommentReportView.my_vote
          type: integer
        resolver:
          $ref: '#/components/schemas/Person'
          title: CommentReportView.resolver
      required:
        - comment_report
        - comment
        - post
        - community
        - creator
        - comment_creator
        - counts
        - creator_banned_from_community
        - creator_is_moderator
        - creator_is_admin
        - creator_blocked
        - subscribed
        - saved
      additionalProperties: false
      title: CommentReportView
      type: object
    CommentResponse:
      properties:
        comment_view:
          $ref: '#/components/schemas/CommentView'
          title: CommentResponse.comment_view
        recipient_ids:
          items:
            $ref: '#/components/schemas/LocalUserId'
          title: CommentResponse.recipient_ids
          type: array
      required:
        - comment_view
        - recipient_ids
      additionalProperties: false
      title: CommentResponse
      type: object
    CommentSortType:
      enum:
        - Hot
        - Top
        - New
        - Old
        - Controversial
      title: CommentSortType
      type: string
    CommentView:
      properties:
        comment:
          $ref: '#/components/schemas/Comment'
          title: CommentView.comment
        creator:
          $ref: '#/components/schemas/Person'
          title: CommentView.creator
        post:
          $ref: '#/components/schemas/Post'
          title: CommentView.post
        community:
          $ref: '#/components/schemas/Community'
          title: CommentView.community
        counts:
          $ref: '#/components/schemas/CommentAggregates'
          title: CommentView.counts
        creator_banned_from_community:
          title: CommentView.creator_banned_from_community
          type: boolean
        banned_from_community:
          title: CommentView.banned_from_community
          type: boolean
        creator_is_moderator:
          title: CommentView.creator_is_moderator
          type: boolean
        creator_is_admin:
          title: CommentView.creator_is_admin
          type: boolean
        subscribed:
          $ref: '#/components/schemas/SubscribedType'
          title: CommentView.subscribed
        saved:
          title: CommentView.saved
          type: boolean
        creator_blocked:
          title: CommentView.creator_blocked
          type: boolean
        my_vote:
          title: CommentView.my_vote
          type: integer
      required:
        - comment
        - creator
        - post
        - community
        - counts
        - creator_banned_from_community
        - banned_from_community
        - creator_is_moderator
        - creator_is_admin
        - subscribed
        - saved
        - creator_blocked
      additionalProperties: false
      title: CommentView
      type: object
    Community:
      properties:
        id:
          $ref: '#/components/schemas/CommunityId'
          title: Community.id
        name:
          title: Community.name
          type: string
        title:
          title: Community.title
          type: string
        description:
          title: Community.description
          type: string
        removed:
          title: Community.removed
          type: boolean
        published:
          title: Community.published
          type: string
        updated:
          title: Community.updated
          type: string
        deleted:
          title: Community.deleted
          type: boolean
        nsfw:
          title: Community.nsfw
          type: boolean
        actor_id:
          title: Community.actor_id
          type: string
        local:
          title: Community.local
          type: boolean
        icon:
          title: Community.icon
          type: string
        banner:
          title: Community.banner
          type: string
        hidden:
          title: Community.hidden
          type: boolean
        posting_restricted_to_mods:
          title: Community.posting_restricted_to_mods
          type: boolean
        instance_id:
          $ref: '#/components/schemas/InstanceId'
          title: Community.instance_id
        visibility:
          $ref: '#/components/schemas/CommunityVisibility'
          title: Community.visibility
      required:
        - id
        - name
        - title
        - removed
        - published
        - deleted
        - nsfw
        - actor_id
        - local
        - hidden
        - posting_restricted_to_mods
        - instance_id
        - visibility
      additionalProperties: false
      title: Community
      type: object
    CommunityAggregates:
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: CommunityAggregates.community_id
        subscribers:
          title: CommunityAggregates.subscribers
          type: integer
        posts:
          title: CommunityAggregates.posts
          type: integer
        comments:
          title: CommunityAggregates.comments
          type: integer
        published:
          title: CommunityAggregates.published
          type: string
        users_active_day:
          title: CommunityAggregates.users_active_day
          type: integer
        users_active_week:
          title: CommunityAggregates.users_active_week
          type: integer
        users_active_month:
          title: CommunityAggregates.users_active_month
          type: integer
        users_active_half_year:
          title: CommunityAggregates.users_active_half_year
          type: integer
        subscribers_local:
          title: CommunityAggregates.subscribers_local
          type: integer
      required:
        - community_id
        - subscribers
        - posts
        - comments
        - published
        - users_active_day
        - users_active_week
        - users_active_month
        - users_active_half_year
        - subscribers_local
      additionalProperties: false
      title: CommunityAggregates
      type: object
    CommunityBlockView:
      properties:
        person:
          $ref: '#/components/schemas/Person'
          title: CommunityBlockView.person
        community:
          $ref: '#/components/schemas/Community'
          title: CommunityBlockView.community
      required:
        - person
        - community
      additionalProperties: false
      title: CommunityBlockView
      type: object
    CommunityFollowerView:
      properties:
        community:
          $ref: '#/components/schemas/Community'
          title: CommunityFollowerView.community
        follower:
          $ref: '#/components/schemas/Person'
          title: CommunityFollowerView.follower
      required:
        - community
        - follower
      additionalProperties: false
      title: CommunityFollowerView
      type: object
    CommunityId:
      title: CommunityId
      type: integer
    CommunityModeratorView:
      properties:
        community:
          $ref: '#/components/schemas/Community'
          title: CommunityModeratorView.community
        moderator:
          $ref: '#/components/schemas/Person'
          title: CommunityModeratorView.moderator
      required:
        - community
        - moderator
      additionalProperties: false
      title: CommunityModeratorView
      type: object
    CommunityResponse:
      properties:
        community_view:
          $ref: '#/components/schemas/CommunityView'
          title: CommunityResponse.community_view
        discussion_languages:
          items:
            $ref: '#/components/schemas/LanguageId'
          title: CommunityResponse.discussion_languages
          type: array
      required:
        - community_view
        - discussion_languages
      additionalProperties: false
      title: CommunityResponse
      type: object
    CommunityView:
      properties:
        community:
          $ref: '#/components/schemas/Community'
          title: CommunityView.community
        subscribed:
          $ref: '#/components/schemas/SubscribedType'
          title: CommunityView.subscribed
        blocked:
          title: CommunityView.blocked
          type: boolean
        counts:
          $ref: '#/components/schemas/CommunityAggregates'
          title: CommunityView.counts
        banned_from_community:
          title: CommunityView.banned_from_community
          type: boolean
      required:
        - community
        - subscribed
        - blocked
        - counts
        - banned_from_community
      additionalProperties: false
      title: CommunityView
      type: object
    CommunityVisibility:
      enum:
        - Public
        - LocalOnly
      title: CommunityVisibility
      type: string
    CreateComment:
      properties:
        content:
          title: CreateComment.content
          type: string
        post_id:
          $ref: '#/components/schemas/PostId'
          title: CreateComment.post_id
        parent_id:
          $ref: '#/components/schemas/CommentId'
          title: CreateComment.parent_id
        language_id:
          $ref: '#/components/schemas/LanguageId'
          title: CreateComment.language_id
      required:
        - content
        - post_id
      additionalProperties: false
      title: CreateComment
      type: object
    CreateCommentLike:
      properties:
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: CreateCommentLike.comment_id
        score:
          title: CreateCommentLike.score
          type: integer
      required:
        - comment_id
        - score
      additionalProperties: false
      title: CreateCommentLike
      type: object
    CreateCommentReport:
      properties:
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: CreateCommentReport.comment_id
        reason:
          title: CreateCommentReport.reason
          type: string
      required:
        - comment_id
        - reason
      additionalProperties: false
      title: CreateCommentReport
      type: object
    CreateCommunity:
      properties:
        name:
          title: CreateCommunity.name
          type: string
        title:
          title: CreateCommunity.title
          type: string
        description:
          title: CreateCommunity.description
          type: string
        icon:
          title: CreateCommunity.icon
          type: string
        banner:
          title: CreateCommunity.banner
          type: string
        nsfw:
          title: CreateCommunity.nsfw
          type: boolean
        posting_restricted_to_mods:
          title: CreateCommunity.posting_restricted_to_mods
          type: boolean
        discussion_languages:
          items:
            $ref: '#/components/schemas/LanguageId'
          title: CreateCommunity.discussion_languages
          type: array
        visibility:
          $ref: '#/components/schemas/CommunityVisibility'
          title: CreateCommunity.visibility
      required:
        - name
        - title
      additionalProperties: false
      title: CreateCommunity
      type: object
    CreateCustomEmoji:
      properties:
        category:
          title: CreateCustomEmoji.category
          type: string
        shortcode:
          title: CreateCustomEmoji.shortcode
          type: string
        image_url:
          title: CreateCustomEmoji.image_url
          type: string
        alt_text:
          title: CreateCustomEmoji.alt_text
          type: string
        keywords:
          items:
            type: string
          title: CreateCustomEmoji.keywords
          type: array
      required:
        - category
        - shortcode
        - image_url
        - alt_text
        - keywords
      additionalProperties: false
      title: CreateCustomEmoji
      type: object
    CreatePost:
      properties:
        name:
          title: CreatePost.name
          type: string
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: CreatePost.community_id
        url:
          title: CreatePost.url
          type: string
        body:
          title: CreatePost.body
          type: string
        alt_text:
          title: CreatePost.alt_text
          type: string
        honeypot:
          title: CreatePost.honeypot
          type: string
        nsfw:
          title: CreatePost.nsfw
          type: boolean
        language_id:
          $ref: '#/components/schemas/LanguageId'
          title: CreatePost.language_id
        custom_thumbnail:
          title: CreatePost.custom_thumbnail
          type: string
      required:
        - name
        - community_id
      additionalProperties: false
      title: CreatePost
      type: object
    CreatePostLike:
      properties:
        post_id:
          $ref: '#/components/schemas/PostId'
          title: CreatePostLike.post_id
        score:
          title: CreatePostLike.score
          type: integer
      required:
        - post_id
        - score
      additionalProperties: false
      title: CreatePostLike
      type: object
    CreatePostReport:
      properties:
        post_id:
          $ref: '#/components/schemas/PostId'
          title: CreatePostReport.post_id
        reason:
          title: CreatePostReport.reason
          type: string
      required:
        - post_id
        - reason
      additionalProperties: false
      title: CreatePostReport
      type: object
    CreatePrivateMessage:
      properties:
        content:
          title: CreatePrivateMessage.content
          type: string
        recipient_id:
          $ref: '#/components/schemas/PersonId'
          title: CreatePrivateMessage.recipient_id
      required:
        - content
        - recipient_id
      additionalProperties: false
      title: CreatePrivateMessage
      type: object
    CreatePrivateMessageReport:
      properties:
        private_message_id:
          $ref: '#/components/schemas/PrivateMessageId'
          title: CreatePrivateMessageReport.private_message_id
        reason:
          title: CreatePrivateMessageReport.reason
          type: string
      required:
        - private_message_id
        - reason
      additionalProperties: false
      title: CreatePrivateMessageReport
      type: object
    CreateSite:
      properties:
        name:
          title: CreateSite.name
          type: string
        sidebar:
          title: CreateSite.sidebar
          type: string
        description:
          title: CreateSite.description
          type: string
        icon:
          title: CreateSite.icon
          type: string
        banner:
          title: CreateSite.banner
          type: string
        enable_downvotes:
          title: CreateSite.enable_downvotes
          type: boolean
        enable_nsfw:
          title: CreateSite.enable_nsfw
          type: boolean
        community_creation_admin_only:
          title: CreateSite.community_creation_admin_only
          type: boolean
        require_email_verification:
          title: CreateSite.require_email_verification
          type: boolean
        application_question:
          title: CreateSite.application_question
          type: string
        private_instance:
          title: CreateSite.private_instance
          type: boolean
        default_theme:
          title: CreateSite.default_theme
          type: string
        default_post_listing_type:
          $ref: '#/components/schemas/ListingType'
          title: CreateSite.default_post_listing_type
        default_sort_type:
          $ref: '#/components/schemas/SortType'
          title: CreateSite.default_sort_type
        legal_information:
          title: CreateSite.legal_information
          type: string
        application_email_admins:
          title: CreateSite.application_email_admins
          type: boolean
        hide_modlog_mod_names:
          title: CreateSite.hide_modlog_mod_names
          type: boolean
        discussion_languages:
          items:
            $ref: '#/components/schemas/LanguageId'
          title: CreateSite.discussion_languages
          type: array
        slur_filter_regex:
          title: CreateSite.slur_filter_regex
          type: string
        actor_name_max_length:
          title: CreateSite.actor_name_max_length
          type: integer
        rate_limit_message:
          title: CreateSite.rate_limit_message
          type: integer
        rate_limit_message_per_second:
          title: CreateSite.rate_limit_message_per_second
          type: integer
        rate_limit_post:
          title: CreateSite.rate_limit_post
          type: integer
        rate_limit_post_per_second:
          title: CreateSite.rate_limit_post_per_second
          type: integer
        rate_limit_register:
          title: CreateSite.rate_limit_register
          type: integer
        rate_limit_register_per_second:
          title: CreateSite.rate_limit_register_per_second
          type: integer
        rate_limit_image:
          title: CreateSite.rate_limit_image
          type: integer
        rate_limit_image_per_second:
          title: CreateSite.rate_limit_image_per_second
          type: integer
        rate_limit_comment:
          title: CreateSite.rate_limit_comment
          type: integer
        rate_limit_comment_per_second:
          title: CreateSite.rate_limit_comment_per_second
          type: integer
        rate_limit_search:
          title: CreateSite.rate_limit_search
          type: integer
        rate_limit_search_per_second:
          title: CreateSite.rate_limit_search_per_second
          type: integer
        federation_enabled:
          title: CreateSite.federation_enabled
          type: boolean
        federation_debug:
          title: CreateSite.federation_debug
          type: boolean
        captcha_enabled:
          title: CreateSite.captcha_enabled
          type: boolean
        captcha_difficulty:
          title: CreateSite.captcha_difficulty
          type: string
        allowed_instances:
          items:
            type: string
          title: CreateSite.allowed_instances
          type: array
        blocked_instances:
          items:
            type: string
          title: CreateSite.blocked_instances
          type: array
        taglines:
          items:
            type: string
          title: CreateSite.taglines
          type: array
        registration_mode:
          $ref: '#/components/schemas/RegistrationMode'
          title: CreateSite.registration_mode
        content_warning:
          title: CreateSite.content_warning
          type: string
        default_post_listing_mode:
          $ref: '#/components/schemas/PostListingMode'
          title: CreateSite.default_post_listing_mode
      required:
        - name
      additionalProperties: false
      title: CreateSite
      type: object
    CustomEmoji:
      properties:
        id:
          $ref: '#/components/schemas/CustomEmojiId'
          title: CustomEmoji.id
        local_site_id:
          $ref: '#/components/schemas/LocalSiteId'
          title: CustomEmoji.local_site_id
        shortcode:
          title: CustomEmoji.shortcode
          type: string
        image_url:
          title: CustomEmoji.image_url
          type: string
        alt_text:
          title: CustomEmoji.alt_text
          type: string
        category:
          title: CustomEmoji.category
          type: string
        published:
          title: CustomEmoji.published
          type: string
        updated:
          title: CustomEmoji.updated
          type: string
      required:
        - id
        - local_site_id
        - shortcode
        - image_url
        - alt_text
        - category
        - published
      additionalProperties: false
      title: CustomEmoji
      type: object
    CustomEmojiId:
      title: CustomEmojiId
      type: integer
    CustomEmojiKeyword:
      properties:
        custom_emoji_id:
          $ref: '#/components/schemas/CustomEmojiId'
          title: CustomEmojiKeyword.custom_emoji_id
        keyword:
          title: CustomEmojiKeyword.keyword
          type: string
      required:
        - custom_emoji_id
        - keyword
      additionalProperties: false
      title: CustomEmojiKeyword
      type: object
    CustomEmojiResponse:
      properties:
        custom_emoji:
          $ref: '#/components/schemas/CustomEmojiView'
          title: CustomEmojiResponse.custom_emoji
      required:
        - custom_emoji
      additionalProperties: false
      title: CustomEmojiResponse
      type: object
    CustomEmojiView:
      properties:
        custom_emoji:
          $ref: '#/components/schemas/CustomEmoji'
          title: CustomEmojiView.custom_emoji
        keywords:
          items:
            $ref: '#/components/schemas/CustomEmojiKeyword'
          title: CustomEmojiView.keywords
          type: array
      required:
        - custom_emoji
        - keywords
      additionalProperties: false
      title: CustomEmojiView
      type: object
    DeleteAccount:
      properties:
        password:
          title: DeleteAccount.password
          type: string
        delete_content:
          title: DeleteAccount.delete_content
          type: boolean
      required:
        - password
        - delete_content
      additionalProperties: false
      title: DeleteAccount
      type: object
    DeleteComment:
      properties:
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: DeleteComment.comment_id
        deleted:
          title: DeleteComment.deleted
          type: boolean
      required:
        - comment_id
        - deleted
      additionalProperties: false
      title: DeleteComment
      type: object
    DeleteCommunity:
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: DeleteCommunity.community_id
        deleted:
          title: DeleteCommunity.deleted
          type: boolean
      required:
        - community_id
        - deleted
      additionalProperties: false
      title: DeleteCommunity
      type: object
    DeleteCustomEmoji:
      properties:
        id:
          $ref: '#/components/schemas/CustomEmojiId'
          title: DeleteCustomEmoji.id
      required:
        - id
      additionalProperties: false
      title: DeleteCustomEmoji
      type: object
    DeletePost:
      properties:
        post_id:
          $ref: '#/components/schemas/PostId'
          title: DeletePost.post_id
        deleted:
          title: DeletePost.deleted
          type: boolean
      required:
        - post_id
        - deleted
      additionalProperties: false
      title: DeletePost
      type: object
    DeletePrivateMessage:
      properties:
        private_message_id:
          $ref: '#/components/schemas/PrivateMessageId'
          title: DeletePrivateMessage.private_message_id
        deleted:
          title: DeletePrivateMessage.deleted
          type: boolean
      required:
        - private_message_id
        - deleted
      additionalProperties: false
      title: DeletePrivateMessage
      type: object
    DistinguishComment:
      properties:
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: DistinguishComment.comment_id
        distinguished:
          title: DistinguishComment.distinguished
          type: boolean
      required:
        - comment_id
        - distinguished
      additionalProperties: false
      title: DistinguishComment
      type: object
    EditComment:
      properties:
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: EditComment.comment_id
        content:
          title: EditComment.content
          type: string
        language_id:
          $ref: '#/components/schemas/LanguageId'
          title: EditComment.language_id
      required:
        - comment_id
      additionalProperties: false
      title: EditComment
      type: object
    EditCommunity:
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: EditCommunity.community_id
        title:
          title: EditCommunity.title
          type: string
        description:
          title: EditCommunity.description
          type: string
        icon:
          title: EditCommunity.icon
          type: string
        banner:
          title: EditCommunity.banner
          type: string
        nsfw:
          title: EditCommunity.nsfw
          type: boolean
        posting_restricted_to_mods:
          title: EditCommunity.posting_restricted_to_mods
          type: boolean
        discussion_languages:
          items:
            $ref: '#/components/schemas/LanguageId'
          title: EditCommunity.discussion_languages
          type: array
        visibility:
          $ref: '#/components/schemas/CommunityVisibility'
          title: EditCommunity.visibility
      required:
        - community_id
      additionalProperties: false
      title: EditCommunity
      type: object
    EditCustomEmoji:
      properties:
        id:
          $ref: '#/components/schemas/CustomEmojiId'
          title: EditCustomEmoji.id
        category:
          title: EditCustomEmoji.category
          type: string
        image_url:
          title: EditCustomEmoji.image_url
          type: string
        alt_text:
          title: EditCustomEmoji.alt_text
          type: string
        keywords:
          items:
            type: string
          title: EditCustomEmoji.keywords
          type: array
      required:
        - id
        - category
        - image_url
        - alt_text
        - keywords
      additionalProperties: false
      title: EditCustomEmoji
      type: object
    EditPost:
      properties:
        post_id:
          $ref: '#/components/schemas/PostId'
          title: EditPost.post_id
        name:
          title: EditPost.name
          type: string
        url:
          title: EditPost.url
          type: string
        body:
          title: EditPost.body
          type: string
        alt_text:
          title: EditPost.alt_text
          type: string
        nsfw:
          title: EditPost.nsfw
          type: boolean
        language_id:
          $ref: '#/components/schemas/LanguageId'
          title: EditPost.language_id
        custom_thumbnail:
          title: EditPost.custom_thumbnail
          type: string
      required:
        - post_id
      additionalProperties: false
      title: EditPost
      type: object
    EditPrivateMessage:
      properties:
        private_message_id:
          $ref: '#/components/schemas/PrivateMessageId'
          title: EditPrivateMessage.private_message_id
        content:
          title: EditPrivateMessage.content
          type: string
      required:
        - private_message_id
        - content
      additionalProperties: false
      title: EditPrivateMessage
      type: object
    EditSite:
      properties:
        name:
          title: EditSite.name
          type: string
        sidebar:
          title: EditSite.sidebar
          type: string
        description:
          title: EditSite.description
          type: string
        icon:
          title: EditSite.icon
          type: string
        banner:
          title: EditSite.banner
          type: string
        enable_downvotes:
          title: EditSite.enable_downvotes
          type: boolean
        enable_nsfw:
          title: EditSite.enable_nsfw
          type: boolean
        community_creation_admin_only:
          title: EditSite.community_creation_admin_only
          type: boolean
        require_email_verification:
          title: EditSite.require_email_verification
          type: boolean
        application_question:
          title: EditSite.application_question
          type: string
        private_instance:
          title: EditSite.private_instance
          type: boolean
        default_theme:
          title: EditSite.default_theme
          type: string
        default_post_listing_type:
          $ref: '#/components/schemas/ListingType'
          title: EditSite.default_post_listing_type
        default_sort_type:
          $ref: '#/components/schemas/SortType'
          title: EditSite.default_sort_type
        legal_information:
          title: EditSite.legal_information
          type: string
        application_email_admins:
          title: EditSite.application_email_admins
          type: boolean
        hide_modlog_mod_names:
          title: EditSite.hide_modlog_mod_names
          type: boolean
        discussion_languages:
          items:
            $ref: '#/components/schemas/LanguageId'
          title: EditSite.discussion_languages
          type: array
        slur_filter_regex:
          title: EditSite.slur_filter_regex
          type: string
        actor_name_max_length:
          title: EditSite.actor_name_max_length
          type: integer
        rate_limit_message:
          title: EditSite.rate_limit_message
          type: integer
        rate_limit_message_per_second:
          title: EditSite.rate_limit_message_per_second
          type: integer
        rate_limit_post:
          title: EditSite.rate_limit_post
          type: integer
        rate_limit_post_per_second:
          title: EditSite.rate_limit_post_per_second
          type: integer
        rate_limit_register:
          title: EditSite.rate_limit_register
          type: integer
        rate_limit_register_per_second:
          title: EditSite.rate_limit_register_per_second
          type: integer
        rate_limit_image:
          title: EditSite.rate_limit_image
          type: integer
        rate_limit_image_per_second:
          title: EditSite.rate_limit_image_per_second
          type: integer
        rate_limit_comment:
          title: EditSite.rate_limit_comment
          type: integer
        rate_limit_comment_per_second:
          title: EditSite.rate_limit_comment_per_second
          type: integer
        rate_limit_search:
          title: EditSite.rate_limit_search
          type: integer
        rate_limit_search_per_second:
          title: EditSite.rate_limit_search_per_second
          type: integer
        federation_enabled:
          title: EditSite.federation_enabled
          type: boolean
        federation_debug:
          title: EditSite.federation_debug
          type: boolean
        captcha_enabled:
          title: EditSite.captcha_enabled
          type: boolean
        captcha_difficulty:
          title: EditSite.captcha_difficulty
          type: string
        allowed_instances:
          items:
            type: string
          title: EditSite.allowed_instances
          type: array
        blocked_instances:
          items:
            type: string
          title: EditSite.blocked_instances
          type: array
        blocked_urls:
          items:
            type: string
          title: EditSite.blocked_urls
          type: array
        taglines:
          items:
            type: string
          title: EditSite.taglines
          type: array
        registration_mode:
          $ref: '#/components/schemas/RegistrationMode'
          title: EditSite.registration_mode
        reports_email_admins:
          title: EditSite.reports_email_admins
          type: boolean
        content_warning:
          title: EditSite.content_warning
          type: string
        default_post_listing_mode:
          $ref: '#/components/schemas/PostListingMode'
          title: EditSite.default_post_listing_mode
      additionalProperties: false
      title: EditSite
      type: object
    FeaturePost:
      properties:
        post_id:
          $ref: '#/components/schemas/PostId'
          title: FeaturePost.post_id
        featured:
          title: FeaturePost.featured
          type: boolean
        feature_type:
          $ref: '#/components/schemas/PostFeatureType'
          title: FeaturePost.feature_type
      required:
        - post_id
        - featured
        - feature_type
      additionalProperties: false
      title: FeaturePost
      type: object
    FederatedInstances:
      properties:
        linked:
          items:
            $ref: '#/components/schemas/InstanceWithFederationState'
          title: FederatedInstances.linked
          type: array
        allowed:
          items:
            $ref: '#/components/schemas/InstanceWithFederationState'
          title: FederatedInstances.allowed
          type: array
        blocked:
          items:
            $ref: '#/components/schemas/InstanceWithFederationState'
          title: FederatedInstances.blocked
          type: array
      required:
        - linked
        - allowed
        - blocked
      additionalProperties: false
      title: FederatedInstances
      type: object
    FollowCommunity:
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: FollowCommunity.community_id
        follow:
          title: FollowCommunity.follow
          type: boolean
      required:
        - community_id
        - follow
      additionalProperties: false
      title: FollowCommunity
      type: object
    GenerateTotpSecretResponse:
      properties:
        totp_secret_url:
          title: GenerateTotpSecretResponse.totp_secret_url
          type: string
      required:
        - totp_secret_url
      additionalProperties: false
      title: GenerateTotpSecretResponse
      type: object
    GetCaptchaResponse:
      properties:
        ok:
          $ref: '#/components/schemas/CaptchaResponse'
          title: GetCaptchaResponse.ok
      additionalProperties: false
      title: GetCaptchaResponse
      type: object
    GetComment:
      properties:
        id:
          $ref: '#/components/schemas/CommentId'
          title: GetComment.id
      required:
        - id
      additionalProperties: false
      title: GetComment
      type: object
    GetComments:
      properties:
        type_:
          $ref: '#/components/schemas/ListingType'
          title: GetComments.type_
        sort:
          $ref: '#/components/schemas/CommentSortType'
          title: GetComments.sort
        max_depth:
          title: GetComments.max_depth
          type: integer
        page:
          title: GetComments.page
          type: integer
        limit:
          title: GetComments.limit
          type: integer
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: GetComments.community_id
        community_name:
          title: GetComments.community_name
          type: string
        post_id:
          $ref: '#/components/schemas/PostId'
          title: GetComments.post_id
        parent_id:
          $ref: '#/components/schemas/CommentId'
          title: GetComments.parent_id
        saved_only:
          title: GetComments.saved_only
          type: boolean
        liked_only:
          title: GetComments.liked_only
          type: boolean
        disliked_only:
          title: GetComments.disliked_only
          type: boolean
      additionalProperties: false
      title: GetComments
      type: object
    GetCommentsResponse:
      properties:
        comments:
          items:
            $ref: '#/components/schemas/CommentView'
          title: GetCommentsResponse.comments
          type: array
      required:
        - comments
      additionalProperties: false
      title: GetCommentsResponse
      type: object
    GetCommunity:
      properties:
        id:
          $ref: '#/components/schemas/CommunityId'
          title: GetCommunity.id
        name:
          title: GetCommunity.name
          type: string
      additionalProperties: false
      title: GetCommunity
      type: object
    GetCommunityResponse:
      properties:
        community_view:
          $ref: '#/components/schemas/CommunityView'
          title: GetCommunityResponse.community_view
        site:
          $ref: '#/components/schemas/Site'
          title: GetCommunityResponse.site
        moderators:
          items:
            $ref: '#/components/schemas/CommunityModeratorView'
          title: GetCommunityResponse.moderators
          type: array
        discussion_languages:
          items:
            $ref: '#/components/schemas/LanguageId'
          title: GetCommunityResponse.discussion_languages
          type: array
      required:
        - community_view
        - moderators
        - discussion_languages
      additionalProperties: false
      title: GetCommunityResponse
      type: object
    GetFederatedInstancesResponse:
      properties:
        federated_instances:
          $ref: '#/components/schemas/FederatedInstances'
          title: GetFederatedInstancesResponse.federated_instances
      additionalProperties: false
      title: GetFederatedInstancesResponse
      type: object
    GetModlog:
      properties:
        mod_person_id:
          $ref: '#/components/schemas/PersonId'
          title: GetModlog.mod_person_id
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: GetModlog.community_id
        page:
          title: GetModlog.page
          type: integer
        limit:
          title: GetModlog.limit
          type: integer
        type_:
          $ref: '#/components/schemas/ModlogActionType'
          title: GetModlog.type_
        other_person_id:
          $ref: '#/components/schemas/PersonId'
          title: GetModlog.other_person_id
        post_id:
          $ref: '#/components/schemas/PostId'
          title: GetModlog.post_id
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: GetModlog.comment_id
      additionalProperties: false
      title: GetModlog
      type: object
    GetModlogResponse:
      properties:
        removed_posts:
          items:
            $ref: '#/components/schemas/ModRemovePostView'
          title: GetModlogResponse.removed_posts
          type: array
        locked_posts:
          items:
            $ref: '#/components/schemas/ModLockPostView'
          title: GetModlogResponse.locked_posts
          type: array
        featured_posts:
          items:
            $ref: '#/components/schemas/ModFeaturePostView'
          title: GetModlogResponse.featured_posts
          type: array
        removed_comments:
          items:
            $ref: '#/components/schemas/ModRemoveCommentView'
          title: GetModlogResponse.removed_comments
          type: array
        removed_communities:
          items:
            $ref: '#/components/schemas/ModRemoveCommunityView'
          title: GetModlogResponse.removed_communities
          type: array
        banned_from_community:
          items:
            $ref: '#/components/schemas/ModBanFromCommunityView'
          title: GetModlogResponse.banned_from_community
          type: array
        banned:
          items:
            $ref: '#/components/schemas/ModBanView'
          title: GetModlogResponse.banned
          type: array
        added_to_community:
          items:
            $ref: '#/components/schemas/ModAddCommunityView'
          title: GetModlogResponse.added_to_community
          type: array
        transferred_to_community:
          items:
            $ref: '#/components/schemas/ModTransferCommunityView'
          title: GetModlogResponse.transferred_to_community
          type: array
        added:
          items:
            $ref: '#/components/schemas/ModAddView'
          title: GetModlogResponse.added
          type: array
        admin_purged_persons:
          items:
            $ref: '#/components/schemas/AdminPurgePersonView'
          title: GetModlogResponse.admin_purged_persons
          type: array
        admin_purged_communities:
          items:
            $ref: '#/components/schemas/AdminPurgeCommunityView'
          title: GetModlogResponse.admin_purged_communities
          type: array
        admin_purged_posts:
          items:
            $ref: '#/components/schemas/AdminPurgePostView'
          title: GetModlogResponse.admin_purged_posts
          type: array
        admin_purged_comments:
          items:
            $ref: '#/components/schemas/AdminPurgeCommentView'
          title: GetModlogResponse.admin_purged_comments
          type: array
        hidden_communities:
          items:
            $ref: '#/components/schemas/ModHideCommunityView'
          title: GetModlogResponse.hidden_communities
          type: array
      required:
        - removed_posts
        - locked_posts
        - featured_posts
        - removed_comments
        - removed_communities
        - banned_from_community
        - banned
        - added_to_community
        - transferred_to_community
        - added
        - admin_purged_persons
        - admin_purged_communities
        - admin_purged_posts
        - admin_purged_comments
        - hidden_communities
      additionalProperties: false
      title: GetModlogResponse
      type: object
    GetPersonDetails:
      properties:
        person_id:
          $ref: '#/components/schemas/PersonId'
          title: GetPersonDetails.person_id
        username:
          title: GetPersonDetails.username
          type: string
        sort:
          $ref: '#/components/schemas/SortType'
          title: GetPersonDetails.sort
        page:
          title: GetPersonDetails.page
          type: integer
        limit:
          title: GetPersonDetails.limit
          type: integer
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: GetPersonDetails.community_id
        saved_only:
          title: GetPersonDetails.saved_only
          type: boolean
      additionalProperties: false
      title: GetPersonDetails
      type: object
    GetPersonDetailsResponse:
      properties:
        person_view:
          $ref: '#/components/schemas/PersonView'
          title: GetPersonDetailsResponse.person_view
        site:
          $ref: '#/components/schemas/Site'
          title: GetPersonDetailsResponse.site
        comments:
          items:
            $ref: '#/components/schemas/CommentView'
          title: GetPersonDetailsResponse.comments
          type: array
        posts:
          items:
            $ref: '#/components/schemas/PostView'
          title: GetPersonDetailsResponse.posts
          type: array
        moderates:
          items:
            $ref: '#/components/schemas/CommunityModeratorView'
          title: GetPersonDetailsResponse.moderates
          type: array
      required:
        - person_view
        - comments
        - posts
        - moderates
      additionalProperties: false
      title: GetPersonDetailsResponse
      type: object
    GetPersonMentions:
      properties:
        sort:
          $ref: '#/components/schemas/CommentSortType'
          title: GetPersonMentions.sort
        page:
          title: GetPersonMentions.page
          type: integer
        limit:
          title: GetPersonMentions.limit
          type: integer
        unread_only:
          title: GetPersonMentions.unread_only
          type: boolean
      additionalProperties: false
      title: GetPersonMentions
      type: object
    GetPersonMentionsResponse:
      properties:
        mentions:
          items:
            $ref: '#/components/schemas/PersonMentionView'
          title: GetPersonMentionsResponse.mentions
          type: array
      required:
        - mentions
      additionalProperties: false
      title: GetPersonMentionsResponse
      type: object
    GetPost:
      properties:
        id:
          $ref: '#/components/schemas/PostId'
          title: GetPost.id
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: GetPost.comment_id
      additionalProperties: false
      title: GetPost
      type: object
    GetPostResponse:
      properties:
        post_view:
          $ref: '#/components/schemas/PostView'
          title: GetPostResponse.post_view
        community_view:
          $ref: '#/components/schemas/CommunityView'
          title: GetPostResponse.community_view
        moderators:
          items:
            $ref: '#/components/schemas/CommunityModeratorView'
          title: GetPostResponse.moderators
          type: array
        cross_posts:
          items:
            $ref: '#/components/schemas/PostView'
          title: GetPostResponse.cross_posts
          type: array
      required:
        - post_view
        - community_view
        - moderators
        - cross_posts
      additionalProperties: false
      title: GetPostResponse
      type: object
    GetPosts:
      properties:
        type_:
          $ref: '#/components/schemas/ListingType'
          title: GetPosts.type_
        sort:
          $ref: '#/components/schemas/SortType'
          title: GetPosts.sort
        page:
          title: GetPosts.page
          type: integer
        limit:
          title: GetPosts.limit
          type: integer
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: GetPosts.community_id
        community_name:
          title: GetPosts.community_name
          type: string
        saved_only:
          title: GetPosts.saved_only
          type: boolean
        liked_only:
          title: GetPosts.liked_only
          type: boolean
        disliked_only:
          title: GetPosts.disliked_only
          type: boolean
        show_hidden:
          title: GetPosts.show_hidden
          type: boolean
        show_read:
          title: GetPosts.show_read
          type: boolean
        show_nsfw:
          title: GetPosts.show_nsfw
          type: boolean
        page_cursor:
          $ref: '#/components/schemas/PaginationCursor'
          title: GetPosts.page_cursor
      additionalProperties: false
      title: GetPosts
      type: object
    GetPostsResponse:
      properties:
        posts:
          items:
            $ref: '#/components/schemas/PostView'
          title: GetPostsResponse.posts
          type: array
        next_page:
          $ref: '#/components/schemas/PaginationCursor'
          title: GetPostsResponse.next_page
      required:
        - posts
      additionalProperties: false
      title: GetPostsResponse
      type: object
    GetPrivateMessages:
      properties:
        unread_only:
          title: GetPrivateMessages.unread_only
          type: boolean
        page:
          title: GetPrivateMessages.page
          type: integer
        limit:
          title: GetPrivateMessages.limit
          type: integer
        creator_id:
          $ref: '#/components/schemas/PersonId'
          title: GetPrivateMessages.creator_id
      additionalProperties: false
      title: GetPrivateMessages
      type: object
    GetRegistrationApplication:
      properties:
        person_id:
          $ref: '#/components/schemas/PersonId'
          title: GetRegistrationApplication.person_id
      required:
        - person_id
      additionalProperties: false
      title: GetRegistrationApplication
      type: object
    GetReplies:
      properties:
        sort:
          $ref: '#/components/schemas/CommentSortType'
          title: GetReplies.sort
        page:
          title: GetReplies.page
          type: integer
        limit:
          title: GetReplies.limit
          type: integer
        unread_only:
          title: GetReplies.unread_only
          type: boolean
      additionalProperties: false
      title: GetReplies
      type: object
    GetRepliesResponse:
      properties:
        replies:
          items:
            $ref: '#/components/schemas/CommentReplyView'
          title: GetRepliesResponse.replies
          type: array
      required:
        - replies
      additionalProperties: false
      title: GetRepliesResponse
      type: object
    GetReportCount:
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: GetReportCount.community_id
      additionalProperties: false
      title: GetReportCount
      type: object
    GetReportCountResponse:
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: GetReportCountResponse.community_id
        comment_reports:
          title: GetReportCountResponse.comment_reports
          type: integer
        post_reports:
          title: GetReportCountResponse.post_reports
          type: integer
        private_message_reports:
          title: GetReportCountResponse.private_message_reports
          type: integer
      required:
        - comment_reports
        - post_reports
      additionalProperties: false
      title: GetReportCountResponse
      type: object
    GetSiteMetadata:
      properties:
        url:
          title: GetSiteMetadata.url
          type: string
      required:
        - url
      additionalProperties: false
      title: GetSiteMetadata
      type: object
    GetSiteMetadataResponse:
      properties:
        metadata:
          $ref: '#/components/schemas/LinkMetadata'
          title: GetSiteMetadataResponse.metadata
      required:
        - metadata
      additionalProperties: false
      title: GetSiteMetadataResponse
      type: object
    GetSiteResponse:
      properties:
        site_view:
          $ref: '#/components/schemas/SiteView'
          title: GetSiteResponse.site_view
        admins:
          items:
            $ref: '#/components/schemas/PersonView'
          title: GetSiteResponse.admins
          type: array
        version:
          title: GetSiteResponse.version
          type: string
        my_user:
          $ref: '#/components/schemas/MyUserInfo'
          title: GetSiteResponse.my_user
        all_languages:
          items:
            $ref: '#/components/schemas/Language'
          title: GetSiteResponse.all_languages
          type: array
        discussion_languages:
          items:
            $ref: '#/components/schemas/LanguageId'
          title: GetSiteResponse.discussion_languages
          type: array
        taglines:
          items:
            $ref: '#/components/schemas/Tagline'
          title: GetSiteResponse.taglines
          type: array
        custom_emojis:
          items:
            $ref: '#/components/schemas/CustomEmojiView'
          title: GetSiteResponse.custom_emojis
          type: array
        blocked_urls:
          items:
            $ref: '#/components/schemas/LocalSiteUrlBlocklist'
          title: GetSiteResponse.blocked_urls
          type: array
      required:
        - site_view
        - admins
        - version
        - all_languages
        - discussion_languages
        - taglines
        - custom_emojis
        - blocked_urls
      additionalProperties: false
      title: GetSiteResponse
      type: object
    GetUnreadCountResponse:
      properties:
        replies:
          title: GetUnreadCountResponse.replies
          type: integer
        mentions:
          title: GetUnreadCountResponse.mentions
          type: integer
        private_messages:
          title: GetUnreadCountResponse.private_messages
          type: integer
      required:
        - replies
        - mentions
        - private_messages
      additionalProperties: false
      title: GetUnreadCountResponse
      type: object
    GetUnreadRegistrationApplicationCountResponse:
      properties:
        registration_applications:
          title: >-
            GetUnreadRegistrationApplicationCountResponse.registration_applications
          type: integer
      required:
        - registration_applications
      additionalProperties: false
      title: GetUnreadRegistrationApplicationCountResponse
      type: object
    HideCommunity:
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: HideCommunity.community_id
        hidden:
          title: HideCommunity.hidden
          type: boolean
        reason:
          title: HideCommunity.reason
          type: string
      required:
        - community_id
        - hidden
      additionalProperties: false
      title: HideCommunity
      type: object
    HidePost:
      properties:
        post_ids:
          items:
            $ref: '#/components/schemas/PostId'
          title: HidePost.post_ids
          type: array
        hide:
          title: HidePost.hide
          type: boolean
      required:
        - post_ids
        - hide
      additionalProperties: false
      title: HidePost
      type: object
    ImageDetails:
      properties:
        link:
          title: ImageDetails.link
          type: string
        width:
          title: ImageDetails.width
          type: integer
        height:
          title: ImageDetails.height
          type: integer
        content_type:
          title: ImageDetails.content_type
          type: string
      required:
        - link
        - width
        - height
        - content_type
      additionalProperties: false
      title: ImageDetails
      type: object
    Instance:
      properties:
        id:
          $ref: '#/components/schemas/InstanceId'
          title: Instance.id
        domain:
          title: Instance.domain
          type: string
        published:
          title: Instance.published
          type: string
        updated:
          title: Instance.updated
          type: string
        software:
          title: Instance.software
          type: string
        version:
          title: Instance.version
          type: string
      required:
        - id
        - domain
        - published
      additionalProperties: false
      title: Instance
      type: object
    InstanceBlockView:
      properties:
        person:
          $ref: '#/components/schemas/Person'
          title: InstanceBlockView.person
        instance:
          $ref: '#/components/schemas/Instance'
          title: InstanceBlockView.instance
        site:
          $ref: '#/components/schemas/Site'
          title: InstanceBlockView.site
      required:
        - person
        - instance
      additionalProperties: false
      title: InstanceBlockView
      type: object
    InstanceId:
      title: InstanceId
      type: integer
    InstanceWithFederationState:
      properties:
        id:
          $ref: '#/components/schemas/InstanceId'
          title: InstanceWithFederationState.id
        domain:
          title: InstanceWithFederationState.domain
          type: string
        published:
          title: InstanceWithFederationState.published
          type: string
        updated:
          title: InstanceWithFederationState.updated
          type: string
        software:
          title: InstanceWithFederationState.software
          type: string
        version:
          title: InstanceWithFederationState.version
          type: string
        federation_state:
          $ref: '#/components/schemas/ReadableFederationState'
          title: InstanceWithFederationState.federation_state
      required:
        - id
        - domain
        - published
      additionalProperties: false
      title: InstanceWithFederationState
      type: object
    Language:
      properties:
        id:
          $ref: '#/components/schemas/LanguageId'
          title: Language.id
        code:
          title: Language.code
          type: string
        name:
          title: Language.name
          type: string
      required:
        - id
        - code
        - name
      additionalProperties: false
      title: Language
      type: object
    LanguageId:
      title: LanguageId
      type: integer
    LemmyErrorType:
      anyOf:
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - report_reason_required
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - report_too_long
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - not_a_moderator
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - not_an_admin
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - cant_block_yourself
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - cant_block_admin
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_update_user
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - passwords_do_not_match
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - email_not_verified
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - email_required
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_update_comment
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_update_private_message
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - cannot_leave_admin
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - no_lines_in_html
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - site_metadata_page_is_not_doctype_html
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - pictrs_response_error
              type: string
            message:
              title: LemmyErrorType.message
              type: string
          required:
            - error
            - message
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - pictrs_purge_response_error
              type: string
            message:
              title: LemmyErrorType.message
              type: string
          required:
            - error
            - message
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - pictrs_caching_disabled
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - image_url_missing_path_segments
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - image_url_missing_last_path_segment
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - pictrs_api_key_not_provided
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - no_content_type_header
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - not_an_image_type
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - not_a_mod_or_admin
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - no_admins
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - not_top_admin
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - not_top_mod
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - not_logged_in
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - not_higher_mod
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - not_higher_admin
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - site_ban
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - deleted
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - banned_from_community
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_find_community
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_find_person
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_find_comment
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_find_comment_report
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_find_post_report
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_find_private_message_report
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_find_local_user
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_find_person_mention
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_find_registration_application
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_find_comment_reply
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_find_private_message
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_find_activity
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - person_is_blocked
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - community_is_blocked
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - instance_is_blocked
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - downvotes_are_disabled
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - instance_is_private
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_password
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - site_description_length_overflow
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - honeypot_failed
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - registration_application_is_pending
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - cant_enable_private_instance_and_federation_together
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - locked
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_create_comment
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - max_comment_depth_reached
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - no_comment_edit_allowed
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - only_admins_can_create_communities
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - community_already_exists
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - language_not_allowed
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - only_mods_can_post_in_community
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_update_post
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - no_post_edit_allowed
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_find_post
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - edit_private_message_not_allowed
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - site_already_exists
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - application_question_required
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_default_post_listing_type
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - registration_closed
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - registration_application_answer_required
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - email_already_exists
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - federation_forbidden_by_strict_allow_list
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - person_is_banned_from_community
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - object_is_not_public
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_community
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - cannot_create_post_or_comment_in_deleted_or_removed_community
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - cannot_receive_page
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - new_post_cannot_be_locked
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - only_local_admin_can_remove_community
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - only_local_admin_can_restore_community
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - no_id_given
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - incorrect_login
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_query
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - object_not_local
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - post_is_locked
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - person_is_banned_from_site
              type: string
            message:
              title: LemmyErrorType.message
              type: string
          required:
            - error
            - message
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_vote_value
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - page_does_not_specify_creator
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - no_email_setup
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - local_site_not_setup
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - email_smtp_server_needs_a_port
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - missing_an_email
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - rate_limit_error
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_name
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_display_name
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_matrix_id
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_post_title
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_body_field
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - bio_length_overflow
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - alt_text_length_overflow
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - missing_totp_token
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - missing_totp_secret
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - incorrect_totp_token
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_parse_totp_secret
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_generate_totp
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - totp_already_enabled
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_like_comment
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_save_comment
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_create_report
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_resolve_report
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - community_moderator_already_exists
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - community_user_already_banned
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - community_block_already_exists
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - community_follower_already_exists
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_update_community_hidden_status
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - person_block_already_exists
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - user_already_exists
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - token_not_found
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_like_post
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_save_post
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_mark_post_as_read
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_hide_post
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_update_community
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_update_replies
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_update_person_mentions
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - post_title_too_long
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_create_post
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_create_private_message
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_update_private
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - system_err_login
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_set_all_registrations_accepted
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_set_all_email_verified
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - banned
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - blocked_url
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_get_comments
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_get_posts
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_url
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - email_send_failed
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - slurs
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_find_object
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - registration_denied
              type: string
            message:
              title: LemmyErrorType.message
              nullable: true
              type: string
          required:
            - error
            - message
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - federation_disabled
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - domain_blocked
              type: string
            message:
              title: LemmyErrorType.message
              type: string
          required:
            - error
            - message
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - domain_not_in_allow_list
              type: string
            message:
              title: LemmyErrorType.message
              type: string
          required:
            - error
            - message
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - federation_disabled_by_strict_allow_list
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - site_name_required
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - site_name_length_overflow
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - permissive_regex
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_regex
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - captcha_incorrect
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_create_audio_captcha
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_url_scheme
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - couldnt_send_webmention
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - contradicting_filters
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - instance_block_already_exists
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - too_many_items
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - community_has_no_followers
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - ban_expiration_in_past
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_unix_time
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - invalid_bot_action
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - cant_block_local_instance
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - url_without_domain
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - inbox_timeout
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - unknown
              type: string
            message:
              title: LemmyErrorType.message
              type: string
          required:
            - error
            - message
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - cant_delete_site
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
        - properties:
            error:
              title: LemmyErrorType.error
              enum:
                - url_length_overflow
              type: string
          required:
            - error
          additionalProperties: false
          title: LemmyErrorType
          type: object
      title: LemmyErrorType
    LinkMetadata:
      properties:
        title:
          title: LinkMetadata.title
          type: string
        description:
          title: LinkMetadata.description
          type: string
        image:
          title: LinkMetadata.image
          type: string
        embed_video_url:
          title: LinkMetadata.embed_video_url
          type: string
        content_type:
          title: LinkMetadata.content_type
          type: string
      additionalProperties: false
      title: LinkMetadata
      type: object
    ListCommentLikes:
      properties:
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: ListCommentLikes.comment_id
        page:
          title: ListCommentLikes.page
          type: integer
        limit:
          title: ListCommentLikes.limit
          type: integer
      required:
        - comment_id
      additionalProperties: false
      title: ListCommentLikes
      type: object
    ListCommentLikesResponse:
      properties:
        comment_likes:
          items:
            $ref: '#/components/schemas/VoteView'
          title: ListCommentLikesResponse.comment_likes
          type: array
      required:
        - comment_likes
      additionalProperties: false
      title: ListCommentLikesResponse
      type: object
    ListCommentReports:
      properties:
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: ListCommentReports.comment_id
        page:
          title: ListCommentReports.page
          type: integer
        limit:
          title: ListCommentReports.limit
          type: integer
        unresolved_only:
          title: ListCommentReports.unresolved_only
          type: boolean
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: ListCommentReports.community_id
      additionalProperties: false
      title: ListCommentReports
      type: object
    ListCommentReportsResponse:
      properties:
        comment_reports:
          items:
            $ref: '#/components/schemas/CommentReportView'
          title: ListCommentReportsResponse.comment_reports
          type: array
      required:
        - comment_reports
      additionalProperties: false
      title: ListCommentReportsResponse
      type: object
    ListCommunities:
      properties:
        type_:
          $ref: '#/components/schemas/ListingType'
          title: ListCommunities.type_
        sort:
          $ref: '#/components/schemas/SortType'
          title: ListCommunities.sort
        show_nsfw:
          title: ListCommunities.show_nsfw
          type: boolean
        page:
          title: ListCommunities.page
          type: integer
        limit:
          title: ListCommunities.limit
          type: integer
      additionalProperties: false
      title: ListCommunities
      type: object
    ListCommunitiesResponse:
      properties:
        communities:
          items:
            $ref: '#/components/schemas/CommunityView'
          title: ListCommunitiesResponse.communities
          type: array
      required:
        - communities
      additionalProperties: false
      title: ListCommunitiesResponse
      type: object
    ListMedia:
      properties:
        page:
          title: ListMedia.page
          type: integer
        limit:
          title: ListMedia.limit
          type: integer
      additionalProperties: false
      title: ListMedia
      type: object
    ListMediaResponse:
      properties:
        images:
          items:
            $ref: '#/components/schemas/LocalImageView'
          title: ListMediaResponse.images
          type: array
      required:
        - images
      additionalProperties: false
      title: ListMediaResponse
      type: object
    ListPostLikes:
      properties:
        post_id:
          $ref: '#/components/schemas/PostId'
          title: ListPostLikes.post_id
        page:
          title: ListPostLikes.page
          type: integer
        limit:
          title: ListPostLikes.limit
          type: integer
      required:
        - post_id
      additionalProperties: false
      title: ListPostLikes
      type: object
    ListPostLikesResponse:
      properties:
        post_likes:
          items:
            $ref: '#/components/schemas/VoteView'
          title: ListPostLikesResponse.post_likes
          type: array
      required:
        - post_likes
      additionalProperties: false
      title: ListPostLikesResponse
      type: object
    ListPostReports:
      properties:
        page:
          title: ListPostReports.page
          type: integer
        limit:
          title: ListPostReports.limit
          type: integer
        unresolved_only:
          title: ListPostReports.unresolved_only
          type: boolean
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: ListPostReports.community_id
        post_id:
          $ref: '#/components/schemas/PostId'
          title: ListPostReports.post_id
      additionalProperties: false
      title: ListPostReports
      type: object
    ListPostReportsResponse:
      properties:
        post_reports:
          items:
            $ref: '#/components/schemas/PostReportView'
          title: ListPostReportsResponse.post_reports
          type: array
      required:
        - post_reports
      additionalProperties: false
      title: ListPostReportsResponse
      type: object
    ListPrivateMessageReports:
      properties:
        page:
          title: ListPrivateMessageReports.page
          type: integer
        limit:
          title: ListPrivateMessageReports.limit
          type: integer
        unresolved_only:
          title: ListPrivateMessageReports.unresolved_only
          type: boolean
      additionalProperties: false
      title: ListPrivateMessageReports
      type: object
    ListPrivateMessageReportsResponse:
      properties:
        private_message_reports:
          items:
            $ref: '#/components/schemas/PrivateMessageReportView'
          title: ListPrivateMessageReportsResponse.private_message_reports
          type: array
      required:
        - private_message_reports
      additionalProperties: false
      title: ListPrivateMessageReportsResponse
      type: object
    ListRegistrationApplications:
      properties:
        unread_only:
          title: ListRegistrationApplications.unread_only
          type: boolean
        page:
          title: ListRegistrationApplications.page
          type: integer
        limit:
          title: ListRegistrationApplications.limit
          type: integer
      additionalProperties: false
      title: ListRegistrationApplications
      type: object
    ListRegistrationApplicationsResponse:
      properties:
        registration_applications:
          items:
            $ref: '#/components/schemas/RegistrationApplicationView'
          title: ListRegistrationApplicationsResponse.registration_applications
          type: array
      required:
        - registration_applications
      additionalProperties: false
      title: ListRegistrationApplicationsResponse
      type: object
    ListingType:
      enum:
        - All
        - Local
        - Subscribed
        - ModeratorView
      title: ListingType
      type: string
    LocalImage:
      properties:
        local_user_id:
          $ref: '#/components/schemas/LocalUserId'
          title: LocalImage.local_user_id
        pictrs_alias:
          title: LocalImage.pictrs_alias
          type: string
        pictrs_delete_token:
          title: LocalImage.pictrs_delete_token
          type: string
        published:
          title: LocalImage.published
          type: string
      required:
        - pictrs_alias
        - pictrs_delete_token
        - published
      additionalProperties: false
      title: LocalImage
      type: object
    LocalImageView:
      properties:
        local_image:
          $ref: '#/components/schemas/LocalImage'
          title: LocalImageView.local_image
        person:
          $ref: '#/components/schemas/Person'
          title: LocalImageView.person
      required:
        - local_image
        - person
      additionalProperties: false
      title: LocalImageView
      type: object
    LocalSite:
      properties:
        id:
          $ref: '#/components/schemas/LocalSiteId'
          title: LocalSite.id
        site_id:
          $ref: '#/components/schemas/SiteId'
          title: LocalSite.site_id
        site_setup:
          title: LocalSite.site_setup
          type: boolean
        enable_downvotes:
          title: LocalSite.enable_downvotes
          type: boolean
        enable_nsfw:
          title: LocalSite.enable_nsfw
          type: boolean
        community_creation_admin_only:
          title: LocalSite.community_creation_admin_only
          type: boolean
        require_email_verification:
          title: LocalSite.require_email_verification
          type: boolean
        application_question:
          title: LocalSite.application_question
          type: string
        private_instance:
          title: LocalSite.private_instance
          type: boolean
        default_theme:
          title: LocalSite.default_theme
          type: string
        default_post_listing_type:
          $ref: '#/components/schemas/ListingType'
          title: LocalSite.default_post_listing_type
        legal_information:
          title: LocalSite.legal_information
          type: string
        hide_modlog_mod_names:
          title: LocalSite.hide_modlog_mod_names
          type: boolean
        application_email_admins:
          title: LocalSite.application_email_admins
          type: boolean
        slur_filter_regex:
          title: LocalSite.slur_filter_regex
          type: string
        actor_name_max_length:
          title: LocalSite.actor_name_max_length
          type: integer
        federation_enabled:
          title: LocalSite.federation_enabled
          type: boolean
        captcha_enabled:
          title: LocalSite.captcha_enabled
          type: boolean
        captcha_difficulty:
          title: LocalSite.captcha_difficulty
          type: string
        published:
          title: LocalSite.published
          type: string
        updated:
          title: LocalSite.updated
          type: string
        registration_mode:
          $ref: '#/components/schemas/RegistrationMode'
          title: LocalSite.registration_mode
        reports_email_admins:
          title: LocalSite.reports_email_admins
          type: boolean
        federation_signed_fetch:
          title: LocalSite.federation_signed_fetch
          type: boolean
        default_post_listing_mode:
          $ref: '#/components/schemas/PostListingMode'
          title: LocalSite.default_post_listing_mode
        default_sort_type:
          $ref: '#/components/schemas/SortType'
          title: LocalSite.default_sort_type
      required:
        - id
        - site_id
        - site_setup
        - enable_downvotes
        - enable_nsfw
        - community_creation_admin_only
        - require_email_verification
        - private_instance
        - default_theme
        - default_post_listing_type
        - hide_modlog_mod_names
        - application_email_admins
        - actor_name_max_length
        - federation_enabled
        - captcha_enabled
        - captcha_difficulty
        - published
        - registration_mode
        - reports_email_admins
        - federation_signed_fetch
        - default_post_listing_mode
        - default_sort_type
      additionalProperties: false
      title: LocalSite
      type: object
    LocalSiteId:
      title: LocalSiteId
      type: integer
    LocalSiteRateLimit:
      properties:
        local_site_id:
          $ref: '#/components/schemas/LocalSiteId'
          title: LocalSiteRateLimit.local_site_id
        message:
          title: LocalSiteRateLimit.message
          type: integer
        message_per_second:
          title: LocalSiteRateLimit.message_per_second
          type: integer
        post:
          title: LocalSiteRateLimit.post
          type: integer
        post_per_second:
          title: LocalSiteRateLimit.post_per_second
          type: integer
        register:
          title: LocalSiteRateLimit.register
          type: integer
        register_per_second:
          title: LocalSiteRateLimit.register_per_second
          type: integer
        image:
          title: LocalSiteRateLimit.image
          type: integer
        image_per_second:
          title: LocalSiteRateLimit.image_per_second
          type: integer
        comment:
          title: LocalSiteRateLimit.comment
          type: integer
        comment_per_second:
          title: LocalSiteRateLimit.comment_per_second
          type: integer
        search:
          title: LocalSiteRateLimit.search
          type: integer
        search_per_second:
          title: LocalSiteRateLimit.search_per_second
          type: integer
        published:
          title: LocalSiteRateLimit.published
          type: string
        updated:
          title: LocalSiteRateLimit.updated
          type: string
        import_user_settings:
          title: LocalSiteRateLimit.import_user_settings
          type: integer
        import_user_settings_per_second:
          title: LocalSiteRateLimit.import_user_settings_per_second
          type: integer
      required:
        - local_site_id
        - message
        - message_per_second
        - post
        - post_per_second
        - register
        - register_per_second
        - image
        - image_per_second
        - comment
        - comment_per_second
        - search
        - search_per_second
        - published
        - import_user_settings
        - import_user_settings_per_second
      additionalProperties: false
      title: LocalSiteRateLimit
      type: object
    LocalSiteUrlBlocklist:
      properties:
        id:
          title: LocalSiteUrlBlocklist.id
          type: integer
        url:
          title: LocalSiteUrlBlocklist.url
          type: string
        published:
          title: LocalSiteUrlBlocklist.published
          type: string
        updated:
          title: LocalSiteUrlBlocklist.updated
          type: string
      required:
        - id
        - url
        - published
      additionalProperties: false
      title: LocalSiteUrlBlocklist
      type: object
    LocalUser:
      properties:
        id:
          $ref: '#/components/schemas/LocalUserId'
          title: LocalUser.id
        person_id:
          $ref: '#/components/schemas/PersonId'
          title: LocalUser.person_id
        email:
          title: LocalUser.email
          type: string
        show_nsfw:
          title: LocalUser.show_nsfw
          type: boolean
        theme:
          title: LocalUser.theme
          type: string
        default_sort_type:
          $ref: '#/components/schemas/SortType'
          title: LocalUser.default_sort_type
        default_listing_type:
          $ref: '#/components/schemas/ListingType'
          title: LocalUser.default_listing_type
        interface_language:
          title: LocalUser.interface_language
          type: string
        show_avatars:
          title: LocalUser.show_avatars
          type: boolean
        send_notifications_to_email:
          title: LocalUser.send_notifications_to_email
          type: boolean
        show_scores:
          title: LocalUser.show_scores
          type: boolean
        show_bot_accounts:
          title: LocalUser.show_bot_accounts
          type: boolean
        show_read_posts:
          title: LocalUser.show_read_posts
          type: boolean
        email_verified:
          title: LocalUser.email_verified
          type: boolean
        accepted_application:
          title: LocalUser.accepted_application
          type: boolean
        open_links_in_new_tab:
          title: LocalUser.open_links_in_new_tab
          type: boolean
        blur_nsfw:
          title: LocalUser.blur_nsfw
          type: boolean
        auto_expand:
          title: LocalUser.auto_expand
          type: boolean
        infinite_scroll_enabled:
          title: LocalUser.infinite_scroll_enabled
          type: boolean
        admin:
          title: LocalUser.admin
          type: boolean
        post_listing_mode:
          $ref: '#/components/schemas/PostListingMode'
          title: LocalUser.post_listing_mode
        totp_2fa_enabled:
          title: LocalUser.totp_2fa_enabled
          type: boolean
        enable_keyboard_navigation:
          title: LocalUser.enable_keyboard_navigation
          type: boolean
        enable_animated_images:
          title: LocalUser.enable_animated_images
          type: boolean
        collapse_bot_comments:
          title: LocalUser.collapse_bot_comments
          type: boolean
        last_donation_notification:
          title: LocalUser.last_donation_notification
          type: string
      required:
        - id
        - person_id
        - show_nsfw
        - theme
        - default_sort_type
        - default_listing_type
        - interface_language
        - show_avatars
        - send_notifications_to_email
        - show_scores
        - show_bot_accounts
        - show_read_posts
        - email_verified
        - accepted_application
        - open_links_in_new_tab
        - blur_nsfw
        - auto_expand
        - infinite_scroll_enabled
        - admin
        - post_listing_mode
        - totp_2fa_enabled
        - enable_keyboard_navigation
        - enable_animated_images
        - collapse_bot_comments
        - last_donation_notification
      additionalProperties: false
      title: LocalUser
      type: object
    LocalUserId:
      title: LocalUserId
      type: integer
    LocalUserView:
      properties:
        local_user:
          $ref: '#/components/schemas/LocalUser'
          title: LocalUserView.local_user
        local_user_vote_display_mode:
          $ref: '#/components/schemas/LocalUserVoteDisplayMode'
          title: LocalUserView.local_user_vote_display_mode
        person:
          $ref: '#/components/schemas/Person'
          title: LocalUserView.person
        counts:
          $ref: '#/components/schemas/PersonAggregates'
          title: LocalUserView.counts
      required:
        - local_user
        - local_user_vote_display_mode
        - person
        - counts
      additionalProperties: false
      title: LocalUserView
      type: object
    LocalUserVoteDisplayMode:
      properties:
        local_user_id:
          $ref: '#/components/schemas/LocalUserId'
          title: LocalUserVoteDisplayMode.local_user_id
        score:
          title: LocalUserVoteDisplayMode.score
          type: boolean
        upvotes:
          title: LocalUserVoteDisplayMode.upvotes
          type: boolean
        downvotes:
          title: LocalUserVoteDisplayMode.downvotes
          type: boolean
        upvote_percentage:
          title: LocalUserVoteDisplayMode.upvote_percentage
          type: boolean
      required:
        - local_user_id
        - score
        - upvotes
        - downvotes
        - upvote_percentage
      additionalProperties: false
      title: LocalUserVoteDisplayMode
      type: object
    LockPost:
      properties:
        post_id:
          $ref: '#/components/schemas/PostId'
          title: LockPost.post_id
        locked:
          title: LockPost.locked
          type: boolean
      required:
        - post_id
        - locked
      additionalProperties: false
      title: LockPost
      type: object
    Login:
      properties:
        username_or_email:
          title: Login.username_or_email
          type: string
        password:
          title: Login.password
          type: string
        totp_2fa_token:
          title: Login.totp_2fa_token
          type: string
      required:
        - username_or_email
        - password
      additionalProperties: false
      title: Login
      type: object
    LoginResponse:
      properties:
        jwt:
          title: LoginResponse.jwt
          type: string
        registration_created:
          title: LoginResponse.registration_created
          type: boolean
        verify_email_sent:
          title: LoginResponse.verify_email_sent
          type: boolean
      required:
        - registration_created
        - verify_email_sent
      additionalProperties: false
      title: LoginResponse
      type: object
    LoginToken:
      properties:
        user_id:
          $ref: '#/components/schemas/LocalUserId'
          title: LoginToken.user_id
        published:
          title: LoginToken.published
          type: string
        ip:
          title: LoginToken.ip
          type: string
        user_agent:
          title: LoginToken.user_agent
          type: string
      required:
        - user_id
        - published
      additionalProperties: false
      title: LoginToken
      type: object
    MarkCommentReplyAsRead:
      properties:
        comment_reply_id:
          $ref: '#/components/schemas/CommentReplyId'
          title: MarkCommentReplyAsRead.comment_reply_id
        read:
          title: MarkCommentReplyAsRead.read
          type: boolean
      required:
        - comment_reply_id
        - read
      additionalProperties: false
      title: MarkCommentReplyAsRead
      type: object
    MarkPersonMentionAsRead:
      properties:
        person_mention_id:
          $ref: '#/components/schemas/PersonMentionId'
          title: MarkPersonMentionAsRead.person_mention_id
        read:
          title: MarkPersonMentionAsRead.read
          type: boolean
      required:
        - person_mention_id
        - read
      additionalProperties: false
      title: MarkPersonMentionAsRead
      type: object
    MarkPostAsRead:
      properties:
        post_ids:
          items:
            $ref: '#/components/schemas/PostId'
          title: MarkPostAsRead.post_ids
          type: array
        read:
          title: MarkPostAsRead.read
          type: boolean
      required:
        - post_ids
        - read
      additionalProperties: false
      title: MarkPostAsRead
      type: object
    MarkPrivateMessageAsRead:
      properties:
        private_message_id:
          $ref: '#/components/schemas/PrivateMessageId'
          title: MarkPrivateMessageAsRead.private_message_id
        read:
          title: MarkPrivateMessageAsRead.read
          type: boolean
      required:
        - private_message_id
        - read
      additionalProperties: false
      title: MarkPrivateMessageAsRead
      type: object
    ModAdd:
      properties:
        id:
          title: ModAdd.id
          type: integer
        mod_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModAdd.mod_person_id
        other_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModAdd.other_person_id
        removed:
          title: ModAdd.removed
          type: boolean
        when_:
          title: ModAdd.when_
          type: string
      required:
        - id
        - mod_person_id
        - other_person_id
        - removed
        - when_
      additionalProperties: false
      title: ModAdd
      type: object
    ModAddCommunity:
      properties:
        id:
          title: ModAddCommunity.id
          type: integer
        mod_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModAddCommunity.mod_person_id
        other_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModAddCommunity.other_person_id
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: ModAddCommunity.community_id
        removed:
          title: ModAddCommunity.removed
          type: boolean
        when_:
          title: ModAddCommunity.when_
          type: string
      required:
        - id
        - mod_person_id
        - other_person_id
        - community_id
        - removed
        - when_
      additionalProperties: false
      title: ModAddCommunity
      type: object
    ModAddCommunityView:
      properties:
        mod_add_community:
          $ref: '#/components/schemas/ModAddCommunity'
          title: ModAddCommunityView.mod_add_community
        moderator:
          $ref: '#/components/schemas/Person'
          title: ModAddCommunityView.moderator
        community:
          $ref: '#/components/schemas/Community'
          title: ModAddCommunityView.community
        modded_person:
          $ref: '#/components/schemas/Person'
          title: ModAddCommunityView.modded_person
      required:
        - mod_add_community
        - community
        - modded_person
      additionalProperties: false
      title: ModAddCommunityView
      type: object
    ModAddView:
      properties:
        mod_add:
          $ref: '#/components/schemas/ModAdd'
          title: ModAddView.mod_add
        moderator:
          $ref: '#/components/schemas/Person'
          title: ModAddView.moderator
        modded_person:
          $ref: '#/components/schemas/Person'
          title: ModAddView.modded_person
      required:
        - mod_add
        - modded_person
      additionalProperties: false
      title: ModAddView
      type: object
    ModBan:
      properties:
        id:
          title: ModBan.id
          type: integer
        mod_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModBan.mod_person_id
        other_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModBan.other_person_id
        reason:
          title: ModBan.reason
          type: string
        banned:
          title: ModBan.banned
          type: boolean
        expires:
          title: ModBan.expires
          type: string
        when_:
          title: ModBan.when_
          type: string
      required:
        - id
        - mod_person_id
        - other_person_id
        - banned
        - when_
      additionalProperties: false
      title: ModBan
      type: object
    ModBanFromCommunity:
      properties:
        id:
          title: ModBanFromCommunity.id
          type: integer
        mod_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModBanFromCommunity.mod_person_id
        other_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModBanFromCommunity.other_person_id
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: ModBanFromCommunity.community_id
        reason:
          title: ModBanFromCommunity.reason
          type: string
        banned:
          title: ModBanFromCommunity.banned
          type: boolean
        expires:
          title: ModBanFromCommunity.expires
          type: string
        when_:
          title: ModBanFromCommunity.when_
          type: string
      required:
        - id
        - mod_person_id
        - other_person_id
        - community_id
        - banned
        - when_
      additionalProperties: false
      title: ModBanFromCommunity
      type: object
    ModBanFromCommunityView:
      properties:
        mod_ban_from_community:
          $ref: '#/components/schemas/ModBanFromCommunity'
          title: ModBanFromCommunityView.mod_ban_from_community
        moderator:
          $ref: '#/components/schemas/Person'
          title: ModBanFromCommunityView.moderator
        community:
          $ref: '#/components/schemas/Community'
          title: ModBanFromCommunityView.community
        banned_person:
          $ref: '#/components/schemas/Person'
          title: ModBanFromCommunityView.banned_person
      required:
        - mod_ban_from_community
        - community
        - banned_person
      additionalProperties: false
      title: ModBanFromCommunityView
      type: object
    ModBanView:
      properties:
        mod_ban:
          $ref: '#/components/schemas/ModBan'
          title: ModBanView.mod_ban
        moderator:
          $ref: '#/components/schemas/Person'
          title: ModBanView.moderator
        banned_person:
          $ref: '#/components/schemas/Person'
          title: ModBanView.banned_person
      required:
        - mod_ban
        - banned_person
      additionalProperties: false
      title: ModBanView
      type: object
    ModFeaturePost:
      properties:
        id:
          title: ModFeaturePost.id
          type: integer
        mod_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModFeaturePost.mod_person_id
        post_id:
          $ref: '#/components/schemas/PostId'
          title: ModFeaturePost.post_id
        featured:
          title: ModFeaturePost.featured
          type: boolean
        when_:
          title: ModFeaturePost.when_
          type: string
        is_featured_community:
          title: ModFeaturePost.is_featured_community
          type: boolean
      required:
        - id
        - mod_person_id
        - post_id
        - featured
        - when_
        - is_featured_community
      additionalProperties: false
      title: ModFeaturePost
      type: object
    ModFeaturePostView:
      properties:
        mod_feature_post:
          $ref: '#/components/schemas/ModFeaturePost'
          title: ModFeaturePostView.mod_feature_post
        moderator:
          $ref: '#/components/schemas/Person'
          title: ModFeaturePostView.moderator
        post:
          $ref: '#/components/schemas/Post'
          title: ModFeaturePostView.post
        community:
          $ref: '#/components/schemas/Community'
          title: ModFeaturePostView.community
      required:
        - mod_feature_post
        - post
        - community
      additionalProperties: false
      title: ModFeaturePostView
      type: object
    ModHideCommunity:
      properties:
        id:
          title: ModHideCommunity.id
          type: integer
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: ModHideCommunity.community_id
        mod_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModHideCommunity.mod_person_id
        when_:
          title: ModHideCommunity.when_
          type: string
        reason:
          title: ModHideCommunity.reason
          type: string
        hidden:
          title: ModHideCommunity.hidden
          type: boolean
      required:
        - id
        - community_id
        - mod_person_id
        - when_
        - hidden
      additionalProperties: false
      title: ModHideCommunity
      type: object
    ModHideCommunityView:
      properties:
        mod_hide_community:
          $ref: '#/components/schemas/ModHideCommunity'
          title: ModHideCommunityView.mod_hide_community
        admin:
          $ref: '#/components/schemas/Person'
          title: ModHideCommunityView.admin
        community:
          $ref: '#/components/schemas/Community'
          title: ModHideCommunityView.community
      required:
        - mod_hide_community
        - community
      additionalProperties: false
      title: ModHideCommunityView
      type: object
    ModLockPost:
      properties:
        id:
          title: ModLockPost.id
          type: integer
        mod_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModLockPost.mod_person_id
        post_id:
          $ref: '#/components/schemas/PostId'
          title: ModLockPost.post_id
        locked:
          title: ModLockPost.locked
          type: boolean
        when_:
          title: ModLockPost.when_
          type: string
      required:
        - id
        - mod_person_id
        - post_id
        - locked
        - when_
      additionalProperties: false
      title: ModLockPost
      type: object
    ModLockPostView:
      properties:
        mod_lock_post:
          $ref: '#/components/schemas/ModLockPost'
          title: ModLockPostView.mod_lock_post
        moderator:
          $ref: '#/components/schemas/Person'
          title: ModLockPostView.moderator
        post:
          $ref: '#/components/schemas/Post'
          title: ModLockPostView.post
        community:
          $ref: '#/components/schemas/Community'
          title: ModLockPostView.community
      required:
        - mod_lock_post
        - post
        - community
      additionalProperties: false
      title: ModLockPostView
      type: object
    ModRemoveComment:
      properties:
        id:
          title: ModRemoveComment.id
          type: integer
        mod_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModRemoveComment.mod_person_id
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: ModRemoveComment.comment_id
        reason:
          title: ModRemoveComment.reason
          type: string
        removed:
          title: ModRemoveComment.removed
          type: boolean
        when_:
          title: ModRemoveComment.when_
          type: string
      required:
        - id
        - mod_person_id
        - comment_id
        - removed
        - when_
      additionalProperties: false
      title: ModRemoveComment
      type: object
    ModRemoveCommentView:
      properties:
        mod_remove_comment:
          $ref: '#/components/schemas/ModRemoveComment'
          title: ModRemoveCommentView.mod_remove_comment
        moderator:
          $ref: '#/components/schemas/Person'
          title: ModRemoveCommentView.moderator
        comment:
          $ref: '#/components/schemas/Comment'
          title: ModRemoveCommentView.comment
        commenter:
          $ref: '#/components/schemas/Person'
          title: ModRemoveCommentView.commenter
        post:
          $ref: '#/components/schemas/Post'
          title: ModRemoveCommentView.post
        community:
          $ref: '#/components/schemas/Community'
          title: ModRemoveCommentView.community
      required:
        - mod_remove_comment
        - comment
        - commenter
        - post
        - community
      additionalProperties: false
      title: ModRemoveCommentView
      type: object
    ModRemoveCommunity:
      properties:
        id:
          title: ModRemoveCommunity.id
          type: integer
        mod_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModRemoveCommunity.mod_person_id
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: ModRemoveCommunity.community_id
        reason:
          title: ModRemoveCommunity.reason
          type: string
        removed:
          title: ModRemoveCommunity.removed
          type: boolean
        when_:
          title: ModRemoveCommunity.when_
          type: string
      required:
        - id
        - mod_person_id
        - community_id
        - removed
        - when_
      additionalProperties: false
      title: ModRemoveCommunity
      type: object
    ModRemoveCommunityView:
      properties:
        mod_remove_community:
          $ref: '#/components/schemas/ModRemoveCommunity'
          title: ModRemoveCommunityView.mod_remove_community
        moderator:
          $ref: '#/components/schemas/Person'
          title: ModRemoveCommunityView.moderator
        community:
          $ref: '#/components/schemas/Community'
          title: ModRemoveCommunityView.community
      required:
        - mod_remove_community
        - community
      additionalProperties: false
      title: ModRemoveCommunityView
      type: object
    ModRemovePost:
      properties:
        id:
          title: ModRemovePost.id
          type: integer
        mod_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModRemovePost.mod_person_id
        post_id:
          $ref: '#/components/schemas/PostId'
          title: ModRemovePost.post_id
        reason:
          title: ModRemovePost.reason
          type: string
        removed:
          title: ModRemovePost.removed
          type: boolean
        when_:
          title: ModRemovePost.when_
          type: string
      required:
        - id
        - mod_person_id
        - post_id
        - removed
        - when_
      additionalProperties: false
      title: ModRemovePost
      type: object
    ModRemovePostView:
      properties:
        mod_remove_post:
          $ref: '#/components/schemas/ModRemovePost'
          title: ModRemovePostView.mod_remove_post
        moderator:
          $ref: '#/components/schemas/Person'
          title: ModRemovePostView.moderator
        post:
          $ref: '#/components/schemas/Post'
          title: ModRemovePostView.post
        community:
          $ref: '#/components/schemas/Community'
          title: ModRemovePostView.community
      required:
        - mod_remove_post
        - post
        - community
      additionalProperties: false
      title: ModRemovePostView
      type: object
    ModTransferCommunity:
      properties:
        id:
          title: ModTransferCommunity.id
          type: integer
        mod_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModTransferCommunity.mod_person_id
        other_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModTransferCommunity.other_person_id
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: ModTransferCommunity.community_id
        when_:
          title: ModTransferCommunity.when_
          type: string
      required:
        - id
        - mod_person_id
        - other_person_id
        - community_id
        - when_
      additionalProperties: false
      title: ModTransferCommunity
      type: object
    ModTransferCommunityView:
      properties:
        mod_transfer_community:
          $ref: '#/components/schemas/ModTransferCommunity'
          title: ModTransferCommunityView.mod_transfer_community
        moderator:
          $ref: '#/components/schemas/Person'
          title: ModTransferCommunityView.moderator
        community:
          $ref: '#/components/schemas/Community'
          title: ModTransferCommunityView.community
        modded_person:
          $ref: '#/components/schemas/Person'
          title: ModTransferCommunityView.modded_person
      required:
        - mod_transfer_community
        - community
        - modded_person
      additionalProperties: false
      title: ModTransferCommunityView
      type: object
    ModlogActionType:
      enum:
        - All
        - ModRemovePost
        - ModLockPost
        - ModFeaturePost
        - ModRemoveComment
        - ModRemoveCommunity
        - ModBanFromCommunity
        - ModAddCommunity
        - ModTransferCommunity
        - ModAdd
        - ModBan
        - ModHideCommunity
        - AdminPurgePerson
        - AdminPurgeCommunity
        - AdminPurgePost
        - AdminPurgeComment
      title: ModlogActionType
      type: string
    ModlogListParams:
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: ModlogListParams.community_id
        mod_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModlogListParams.mod_person_id
        other_person_id:
          $ref: '#/components/schemas/PersonId'
          title: ModlogListParams.other_person_id
        post_id:
          $ref: '#/components/schemas/PostId'
          title: ModlogListParams.post_id
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: ModlogListParams.comment_id
        page:
          title: ModlogListParams.page
          type: integer
        limit:
          title: ModlogListParams.limit
          type: integer
        hide_modlog_names:
          title: ModlogListParams.hide_modlog_names
          type: boolean
      required:
        - hide_modlog_names
      additionalProperties: false
      title: ModlogListParams
      type: object
    MyUserInfo:
      properties:
        local_user_view:
          $ref: '#/components/schemas/LocalUserView'
          title: MyUserInfo.local_user_view
        follows:
          items:
            $ref: '#/components/schemas/CommunityFollowerView'
          title: MyUserInfo.follows
          type: array
        moderates:
          items:
            $ref: '#/components/schemas/CommunityModeratorView'
          title: MyUserInfo.moderates
          type: array
        community_blocks:
          items:
            $ref: '#/components/schemas/CommunityBlockView'
          title: MyUserInfo.community_blocks
          type: array
        instance_blocks:
          items:
            $ref: '#/components/schemas/InstanceBlockView'
          title: MyUserInfo.instance_blocks
          type: array
        person_blocks:
          items:
            $ref: '#/components/schemas/PersonBlockView'
          title: MyUserInfo.person_blocks
          type: array
        discussion_languages:
          items:
            $ref: '#/components/schemas/LanguageId'
          title: MyUserInfo.discussion_languages
          type: array
      required:
        - local_user_view
        - follows
        - moderates
        - community_blocks
        - instance_blocks
        - person_blocks
        - discussion_languages
      additionalProperties: false
      title: MyUserInfo
      type: object
    OpenGraphData:
      properties:
        title:
          title: OpenGraphData.title
          type: string
        description:
          title: OpenGraphData.description
          type: string
        image:
          title: OpenGraphData.image
          type: string
        embed_video_url:
          title: OpenGraphData.embed_video_url
          type: string
      additionalProperties: false
      title: OpenGraphData
      type: object
    PaginationCursor:
      title: PaginationCursor
      type: string
    PasswordChangeAfterReset:
      properties:
        token:
          title: PasswordChangeAfterReset.token
          type: string
        password:
          title: PasswordChangeAfterReset.password
          type: string
        password_verify:
          title: PasswordChangeAfterReset.password_verify
          type: string
      required:
        - token
        - password
        - password_verify
      additionalProperties: false
      title: PasswordChangeAfterReset
      type: object
    PasswordReset:
      properties:
        email:
          title: PasswordReset.email
          type: string
      required:
        - email
      additionalProperties: false
      title: PasswordReset
      type: object
    Person:
      properties:
        id:
          $ref: '#/components/schemas/PersonId'
          title: Person.id
        name:
          title: Person.name
          type: string
        display_name:
          title: Person.display_name
          type: string
        avatar:
          title: Person.avatar
          type: string
        banned:
          title: Person.banned
          type: boolean
        published:
          title: Person.published
          type: string
        updated:
          title: Person.updated
          type: string
        actor_id:
          title: Person.actor_id
          type: string
        bio:
          title: Person.bio
          type: string
        local:
          title: Person.local
          type: boolean
        banner:
          title: Person.banner
          type: string
        deleted:
          title: Person.deleted
          type: boolean
        matrix_user_id:
          title: Person.matrix_user_id
          type: string
        bot_account:
          title: Person.bot_account
          type: boolean
        ban_expires:
          title: Person.ban_expires
          type: string
        instance_id:
          $ref: '#/components/schemas/InstanceId'
          title: Person.instance_id
      required:
        - id
        - name
        - banned
        - published
        - actor_id
        - local
        - deleted
        - bot_account
        - instance_id
      additionalProperties: false
      title: Person
      type: object
    PersonAggregates:
      properties:
        person_id:
          $ref: '#/components/schemas/PersonId'
          title: PersonAggregates.person_id
        post_count:
          title: PersonAggregates.post_count
          type: integer
        comment_count:
          title: PersonAggregates.comment_count
          type: integer
      required:
        - person_id
        - post_count
        - comment_count
      additionalProperties: false
      title: PersonAggregates
      type: object
    PersonBlockView:
      properties:
        person:
          $ref: '#/components/schemas/Person'
          title: PersonBlockView.person
        target:
          $ref: '#/components/schemas/Person'
          title: PersonBlockView.target
      required:
        - person
        - target
      additionalProperties: false
      title: PersonBlockView
      type: object
    PersonId:
      title: PersonId
      type: integer
    PersonMention:
      properties:
        id:
          $ref: '#/components/schemas/PersonMentionId'
          title: PersonMention.id
        recipient_id:
          $ref: '#/components/schemas/PersonId'
          title: PersonMention.recipient_id
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: PersonMention.comment_id
        read:
          title: PersonMention.read
          type: boolean
        published:
          title: PersonMention.published
          type: string
      required:
        - id
        - recipient_id
        - comment_id
        - read
        - published
      additionalProperties: false
      title: PersonMention
      type: object
    PersonMentionId:
      title: PersonMentionId
      type: integer
    PersonMentionResponse:
      properties:
        person_mention_view:
          $ref: '#/components/schemas/PersonMentionView'
          title: PersonMentionResponse.person_mention_view
      required:
        - person_mention_view
      additionalProperties: false
      title: PersonMentionResponse
      type: object
    PersonMentionView:
      properties:
        person_mention:
          $ref: '#/components/schemas/PersonMention'
          title: PersonMentionView.person_mention
        comment:
          $ref: '#/components/schemas/Comment'
          title: PersonMentionView.comment
        creator:
          $ref: '#/components/schemas/Person'
          title: PersonMentionView.creator
        post:
          $ref: '#/components/schemas/Post'
          title: PersonMentionView.post
        community:
          $ref: '#/components/schemas/Community'
          title: PersonMentionView.community
        recipient:
          $ref: '#/components/schemas/Person'
          title: PersonMentionView.recipient
        counts:
          $ref: '#/components/schemas/CommentAggregates'
          title: PersonMentionView.counts
        creator_banned_from_community:
          title: PersonMentionView.creator_banned_from_community
          type: boolean
        banned_from_community:
          title: PersonMentionView.banned_from_community
          type: boolean
        creator_is_moderator:
          title: PersonMentionView.creator_is_moderator
          type: boolean
        creator_is_admin:
          title: PersonMentionView.creator_is_admin
          type: boolean
        subscribed:
          $ref: '#/components/schemas/SubscribedType'
          title: PersonMentionView.subscribed
        saved:
          title: PersonMentionView.saved
          type: boolean
        creator_blocked:
          title: PersonMentionView.creator_blocked
          type: boolean
        my_vote:
          title: PersonMentionView.my_vote
          type: integer
      required:
        - person_mention
        - comment
        - creator
        - post
        - community
        - recipient
        - counts
        - creator_banned_from_community
        - banned_from_community
        - creator_is_moderator
        - creator_is_admin
        - subscribed
        - saved
        - creator_blocked
      additionalProperties: false
      title: PersonMentionView
      type: object
    PersonView:
      properties:
        person:
          $ref: '#/components/schemas/Person'
          title: PersonView.person
        counts:
          $ref: '#/components/schemas/PersonAggregates'
          title: PersonView.counts
        is_admin:
          title: PersonView.is_admin
          type: boolean
      required:
        - person
        - counts
        - is_admin
      additionalProperties: false
      title: PersonView
      type: object
    Post:
      properties:
        id:
          $ref: '#/components/schemas/PostId'
          title: Post.id
        name:
          title: Post.name
          type: string
        url:
          title: Post.url
          type: string
        body:
          title: Post.body
          type: string
        creator_id:
          $ref: '#/components/schemas/PersonId'
          title: Post.creator_id
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: Post.community_id
        removed:
          title: Post.removed
          type: boolean
        locked:
          title: Post.locked
          type: boolean
        published:
          title: Post.published
          type: string
        updated:
          title: Post.updated
          type: string
        deleted:
          title: Post.deleted
          type: boolean
        nsfw:
          title: Post.nsfw
          type: boolean
        embed_title:
          title: Post.embed_title
          type: string
        embed_description:
          title: Post.embed_description
          type: string
        thumbnail_url:
          title: Post.thumbnail_url
          type: string
        ap_id:
          title: Post.ap_id
          type: string
        local:
          title: Post.local
          type: boolean
        embed_video_url:
          title: Post.embed_video_url
          type: string
        language_id:
          $ref: '#/components/schemas/LanguageId'
          title: Post.language_id
        featured_community:
          title: Post.featured_community
          type: boolean
        featured_local:
          title: Post.featured_local
          type: boolean
        url_content_type:
          title: Post.url_content_type
          type: string
        alt_text:
          title: Post.alt_text
          type: string
      required:
        - id
        - name
        - creator_id
        - community_id
        - removed
        - locked
        - published
        - deleted
        - nsfw
        - ap_id
        - local
        - language_id
        - featured_community
        - featured_local
      additionalProperties: false
      title: Post
      type: object
    PostAggregates:
      properties:
        post_id:
          $ref: '#/components/schemas/PostId'
          title: PostAggregates.post_id
        comments:
          title: PostAggregates.comments
          type: integer
        score:
          title: PostAggregates.score
          type: integer
        upvotes:
          title: PostAggregates.upvotes
          type: integer
        downvotes:
          title: PostAggregates.downvotes
          type: integer
        published:
          title: PostAggregates.published
          type: string
        newest_comment_time:
          title: PostAggregates.newest_comment_time
          type: string
      required:
        - post_id
        - comments
        - score
        - upvotes
        - downvotes
        - published
        - newest_comment_time
      additionalProperties: false
      title: PostAggregates
      type: object
    PostFeatureType:
      enum:
        - Local
        - Community
      title: PostFeatureType
      type: string
    PostId:
      title: PostId
      type: integer
    PostListingMode:
      enum:
        - List
        - Card
        - SmallCard
      title: PostListingMode
      type: string
    PostReport:
      properties:
        id:
          $ref: '#/components/schemas/PostReportId'
          title: PostReport.id
        creator_id:
          $ref: '#/components/schemas/PersonId'
          title: PostReport.creator_id
        post_id:
          $ref: '#/components/schemas/PostId'
          title: PostReport.post_id
        original_post_name:
          title: PostReport.original_post_name
          type: string
        original_post_url:
          title: PostReport.original_post_url
          type: string
        original_post_body:
          title: PostReport.original_post_body
          type: string
        reason:
          title: PostReport.reason
          type: string
        resolved:
          title: PostReport.resolved
          type: boolean
        resolver_id:
          $ref: '#/components/schemas/PersonId'
          title: PostReport.resolver_id
        published:
          title: PostReport.published
          type: string
        updated:
          title: PostReport.updated
          type: string
      required:
        - id
        - creator_id
        - post_id
        - original_post_name
        - reason
        - resolved
        - published
      additionalProperties: false
      title: PostReport
      type: object
    PostReportId:
      title: PostReportId
      type: integer
    PostReportResponse:
      properties:
        post_report_view:
          $ref: '#/components/schemas/PostReportView'
          title: PostReportResponse.post_report_view
      required:
        - post_report_view
      additionalProperties: false
      title: PostReportResponse
      type: object
    PostReportView:
      properties:
        post_report:
          $ref: '#/components/schemas/PostReport'
          title: PostReportView.post_report
        post:
          $ref: '#/components/schemas/Post'
          title: PostReportView.post
        community:
          $ref: '#/components/schemas/Community'
          title: PostReportView.community
        creator:
          $ref: '#/components/schemas/Person'
          title: PostReportView.creator
        post_creator:
          $ref: '#/components/schemas/Person'
          title: PostReportView.post_creator
        creator_banned_from_community:
          title: PostReportView.creator_banned_from_community
          type: boolean
        creator_is_moderator:
          title: PostReportView.creator_is_moderator
          type: boolean
        creator_is_admin:
          title: PostReportView.creator_is_admin
          type: boolean
        subscribed:
          $ref: '#/components/schemas/SubscribedType'
          title: PostReportView.subscribed
        saved:
          title: PostReportView.saved
          type: boolean
        read:
          title: PostReportView.read
          type: boolean
        hidden:
          title: PostReportView.hidden
          type: boolean
        creator_blocked:
          title: PostReportView.creator_blocked
          type: boolean
        my_vote:
          title: PostReportView.my_vote
          type: integer
        unread_comments:
          title: PostReportView.unread_comments
          type: integer
        counts:
          $ref: '#/components/schemas/PostAggregates'
          title: PostReportView.counts
        resolver:
          $ref: '#/components/schemas/Person'
          title: PostReportView.resolver
      required:
        - post_report
        - post
        - community
        - creator
        - post_creator
        - creator_banned_from_community
        - creator_is_moderator
        - creator_is_admin
        - subscribed
        - saved
        - read
        - hidden
        - creator_blocked
        - unread_comments
        - counts
      additionalProperties: false
      title: PostReportView
      type: object
    PostResponse:
      properties:
        post_view:
          $ref: '#/components/schemas/PostView'
          title: PostResponse.post_view
      required:
        - post_view
      additionalProperties: false
      title: PostResponse
      type: object
    PostView:
      properties:
        post:
          $ref: '#/components/schemas/Post'
          title: PostView.post
        creator:
          $ref: '#/components/schemas/Person'
          title: PostView.creator
        community:
          $ref: '#/components/schemas/Community'
          title: PostView.community
        image_details:
          $ref: '#/components/schemas/ImageDetails'
          title: PostView.image_details
        creator_banned_from_community:
          title: PostView.creator_banned_from_community
          type: boolean
        banned_from_community:
          title: PostView.banned_from_community
          type: boolean
        creator_is_moderator:
          title: PostView.creator_is_moderator
          type: boolean
        creator_is_admin:
          title: PostView.creator_is_admin
          type: boolean
        counts:
          $ref: '#/components/schemas/PostAggregates'
          title: PostView.counts
        subscribed:
          $ref: '#/components/schemas/SubscribedType'
          title: PostView.subscribed
        saved:
          title: PostView.saved
          type: boolean
        read:
          title: PostView.read
          type: boolean
        hidden:
          title: PostView.hidden
          type: boolean
        creator_blocked:
          title: PostView.creator_blocked
          type: boolean
        my_vote:
          title: PostView.my_vote
          type: integer
        unread_comments:
          title: PostView.unread_comments
          type: integer
      required:
        - post
        - creator
        - community
        - creator_banned_from_community
        - banned_from_community
        - creator_is_moderator
        - creator_is_admin
        - counts
        - subscribed
        - saved
        - read
        - hidden
        - creator_blocked
        - unread_comments
      additionalProperties: false
      title: PostView
      type: object
    PrivateMessage:
      properties:
        id:
          $ref: '#/components/schemas/PrivateMessageId'
          title: PrivateMessage.id
        creator_id:
          $ref: '#/components/schemas/PersonId'
          title: PrivateMessage.creator_id
        recipient_id:
          $ref: '#/components/schemas/PersonId'
          title: PrivateMessage.recipient_id
        content:
          title: PrivateMessage.content
          type: string
        deleted:
          title: PrivateMessage.deleted
          type: boolean
        read:
          title: PrivateMessage.read
          type: boolean
        published:
          title: PrivateMessage.published
          type: string
        updated:
          title: PrivateMessage.updated
          type: string
        ap_id:
          title: PrivateMessage.ap_id
          type: string
        local:
          title: PrivateMessage.local
          type: boolean
      required:
        - id
        - creator_id
        - recipient_id
        - content
        - deleted
        - read
        - published
        - ap_id
        - local
      additionalProperties: false
      title: PrivateMessage
      type: object
    PrivateMessageId:
      title: PrivateMessageId
      type: integer
    PrivateMessageReport:
      properties:
        id:
          $ref: '#/components/schemas/PrivateMessageReportId'
          title: PrivateMessageReport.id
        creator_id:
          $ref: '#/components/schemas/PersonId'
          title: PrivateMessageReport.creator_id
        private_message_id:
          $ref: '#/components/schemas/PrivateMessageId'
          title: PrivateMessageReport.private_message_id
        original_pm_text:
          title: PrivateMessageReport.original_pm_text
          type: string
        reason:
          title: PrivateMessageReport.reason
          type: string
        resolved:
          title: PrivateMessageReport.resolved
          type: boolean
        resolver_id:
          $ref: '#/components/schemas/PersonId'
          title: PrivateMessageReport.resolver_id
        published:
          title: PrivateMessageReport.published
          type: string
        updated:
          title: PrivateMessageReport.updated
          type: string
      required:
        - id
        - creator_id
        - private_message_id
        - original_pm_text
        - reason
        - resolved
        - published
      additionalProperties: false
      title: PrivateMessageReport
      type: object
    PrivateMessageReportId:
      title: PrivateMessageReportId
      type: integer
    PrivateMessageReportResponse:
      properties:
        private_message_report_view:
          $ref: '#/components/schemas/PrivateMessageReportView'
          title: PrivateMessageReportResponse.private_message_report_view
      required:
        - private_message_report_view
      additionalProperties: false
      title: PrivateMessageReportResponse
      type: object
    PrivateMessageReportView:
      properties:
        private_message_report:
          $ref: '#/components/schemas/PrivateMessageReport'
          title: PrivateMessageReportView.private_message_report
        private_message:
          $ref: '#/components/schemas/PrivateMessage'
          title: PrivateMessageReportView.private_message
        private_message_creator:
          $ref: '#/components/schemas/Person'
          title: PrivateMessageReportView.private_message_creator
        creator:
          $ref: '#/components/schemas/Person'
          title: PrivateMessageReportView.creator
        resolver:
          $ref: '#/components/schemas/Person'
          title: PrivateMessageReportView.resolver
      required:
        - private_message_report
        - private_message
        - private_message_creator
        - creator
      additionalProperties: false
      title: PrivateMessageReportView
      type: object
    PrivateMessageResponse:
      properties:
        private_message_view:
          $ref: '#/components/schemas/PrivateMessageView'
          title: PrivateMessageResponse.private_message_view
      required:
        - private_message_view
      additionalProperties: false
      title: PrivateMessageResponse
      type: object
    PrivateMessageView:
      properties:
        private_message:
          $ref: '#/components/schemas/PrivateMessage'
          title: PrivateMessageView.private_message
        creator:
          $ref: '#/components/schemas/Person'
          title: PrivateMessageView.creator
        recipient:
          $ref: '#/components/schemas/Person'
          title: PrivateMessageView.recipient
      required:
        - private_message
        - creator
        - recipient
      additionalProperties: false
      title: PrivateMessageView
      type: object
    PrivateMessagesResponse:
      properties:
        private_messages:
          items:
            $ref: '#/components/schemas/PrivateMessageView'
          title: PrivateMessagesResponse.private_messages
          type: array
      required:
        - private_messages
      additionalProperties: false
      title: PrivateMessagesResponse
      type: object
    PurgeComment:
      properties:
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: PurgeComment.comment_id
        reason:
          title: PurgeComment.reason
          type: string
      required:
        - comment_id
      additionalProperties: false
      title: PurgeComment
      type: object
    PurgeCommunity:
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: PurgeCommunity.community_id
        reason:
          title: PurgeCommunity.reason
          type: string
      required:
        - community_id
      additionalProperties: false
      title: PurgeCommunity
      type: object
    PurgePerson:
      properties:
        person_id:
          $ref: '#/components/schemas/PersonId'
          title: PurgePerson.person_id
        reason:
          title: PurgePerson.reason
          type: string
      required:
        - person_id
      additionalProperties: false
      title: PurgePerson
      type: object
    PurgePost:
      properties:
        post_id:
          $ref: '#/components/schemas/PostId'
          title: PurgePost.post_id
        reason:
          title: PurgePost.reason
          type: string
      required:
        - post_id
      additionalProperties: false
      title: PurgePost
      type: object
    ReadableFederationState:
      properties:
        instance_id:
          $ref: '#/components/schemas/InstanceId'
          title: ReadableFederationState.instance_id
        last_successful_id:
          $ref: '#/components/schemas/ActivityId'
          title: ReadableFederationState.last_successful_id
        last_successful_published_time:
          title: ReadableFederationState.last_successful_published_time
          type: string
        fail_count:
          title: ReadableFederationState.fail_count
          type: integer
        last_retry:
          title: ReadableFederationState.last_retry
          type: string
        next_retry:
          title: ReadableFederationState.next_retry
          type: string
      required:
        - instance_id
        - fail_count
      additionalProperties: false
      title: ReadableFederationState
      type: object
    Register:
      properties:
        username:
          title: Register.username
          type: string
        password:
          title: Register.password
          type: string
        password_verify:
          title: Register.password_verify
          type: string
        show_nsfw:
          title: Register.show_nsfw
          type: boolean
        email:
          title: Register.email
          type: string
        captcha_uuid:
          title: Register.captcha_uuid
          type: string
        captcha_answer:
          title: Register.captcha_answer
          type: string
        honeypot:
          title: Register.honeypot
          type: string
        answer:
          title: Register.answer
          type: string
      required:
        - username
        - password
        - password_verify
      additionalProperties: false
      title: Register
      type: object
    RegistrationApplication:
      properties:
        id:
          $ref: '#/components/schemas/RegistrationApplicationId'
          title: RegistrationApplication.id
        local_user_id:
          $ref: '#/components/schemas/LocalUserId'
          title: RegistrationApplication.local_user_id
        answer:
          title: RegistrationApplication.answer
          type: string
        admin_id:
          $ref: '#/components/schemas/PersonId'
          title: RegistrationApplication.admin_id
        deny_reason:
          title: RegistrationApplication.deny_reason
          type: string
        published:
          title: RegistrationApplication.published
          type: string
      required:
        - id
        - local_user_id
        - answer
        - published
      additionalProperties: false
      title: RegistrationApplication
      type: object
    RegistrationApplicationId:
      title: RegistrationApplicationId
      type: integer
    RegistrationApplicationResponse:
      properties:
        registration_application:
          $ref: '#/components/schemas/RegistrationApplicationView'
          title: RegistrationApplicationResponse.registration_application
      required:
        - registration_application
      additionalProperties: false
      title: RegistrationApplicationResponse
      type: object
    RegistrationApplicationView:
      properties:
        registration_application:
          $ref: '#/components/schemas/RegistrationApplication'
          title: RegistrationApplicationView.registration_application
        creator_local_user:
          $ref: '#/components/schemas/LocalUser'
          title: RegistrationApplicationView.creator_local_user
        creator:
          $ref: '#/components/schemas/Person'
          title: RegistrationApplicationView.creator
        admin:
          $ref: '#/components/schemas/Person'
          title: RegistrationApplicationView.admin
      required:
        - registration_application
        - creator_local_user
        - creator
      additionalProperties: false
      title: RegistrationApplicationView
      type: object
    RegistrationMode:
      enum:
        - Closed
        - RequireApplication
        - Open
      title: RegistrationMode
      type: string
    RemoveComment:
      properties:
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: RemoveComment.comment_id
        removed:
          title: RemoveComment.removed
          type: boolean
        reason:
          title: RemoveComment.reason
          type: string
      required:
        - comment_id
        - removed
      additionalProperties: false
      title: RemoveComment
      type: object
    RemoveCommunity:
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: RemoveCommunity.community_id
        removed:
          title: RemoveCommunity.removed
          type: boolean
        reason:
          title: RemoveCommunity.reason
          type: string
      required:
        - community_id
        - removed
      additionalProperties: false
      title: RemoveCommunity
      type: object
    RemovePost:
      properties:
        post_id:
          $ref: '#/components/schemas/PostId'
          title: RemovePost.post_id
        removed:
          title: RemovePost.removed
          type: boolean
        reason:
          title: RemovePost.reason
          type: string
      required:
        - post_id
        - removed
      additionalProperties: false
      title: RemovePost
      type: object
    ResolveCommentReport:
      properties:
        report_id:
          $ref: '#/components/schemas/CommentReportId'
          title: ResolveCommentReport.report_id
        resolved:
          title: ResolveCommentReport.resolved
          type: boolean
      required:
        - report_id
        - resolved
      additionalProperties: false
      title: ResolveCommentReport
      type: object
    ResolveObject:
      properties:
        q:
          title: ResolveObject.q
          type: string
      required:
        - q
      additionalProperties: false
      title: ResolveObject
      type: object
    ResolveObjectResponse:
      properties:
        comment:
          $ref: '#/components/schemas/CommentView'
          title: ResolveObjectResponse.comment
        post:
          $ref: '#/components/schemas/PostView'
          title: ResolveObjectResponse.post
        community:
          $ref: '#/components/schemas/CommunityView'
          title: ResolveObjectResponse.community
        person:
          $ref: '#/components/schemas/PersonView'
          title: ResolveObjectResponse.person
      additionalProperties: false
      title: ResolveObjectResponse
      type: object
    ResolvePostReport:
      properties:
        report_id:
          $ref: '#/components/schemas/PostReportId'
          title: ResolvePostReport.report_id
        resolved:
          title: ResolvePostReport.resolved
          type: boolean
      required:
        - report_id
        - resolved
      additionalProperties: false
      title: ResolvePostReport
      type: object
    ResolvePrivateMessageReport:
      properties:
        report_id:
          $ref: '#/components/schemas/PrivateMessageReportId'
          title: ResolvePrivateMessageReport.report_id
        resolved:
          title: ResolvePrivateMessageReport.resolved
          type: boolean
      required:
        - report_id
        - resolved
      additionalProperties: false
      title: ResolvePrivateMessageReport
      type: object
    SaveComment:
      properties:
        comment_id:
          $ref: '#/components/schemas/CommentId'
          title: SaveComment.comment_id
        save:
          title: SaveComment.save
          type: boolean
      required:
        - comment_id
        - save
      additionalProperties: false
      title: SaveComment
      type: object
    SavePost:
      properties:
        post_id:
          $ref: '#/components/schemas/PostId'
          title: SavePost.post_id
        save:
          title: SavePost.save
          type: boolean
      required:
        - post_id
        - save
      additionalProperties: false
      title: SavePost
      type: object
    SaveUserSettings:
      properties:
        show_nsfw:
          title: SaveUserSettings.show_nsfw
          type: boolean
        blur_nsfw:
          title: SaveUserSettings.blur_nsfw
          type: boolean
        auto_expand:
          title: SaveUserSettings.auto_expand
          type: boolean
        theme:
          title: SaveUserSettings.theme
          type: string
        default_sort_type:
          $ref: '#/components/schemas/SortType'
          title: SaveUserSettings.default_sort_type
        default_listing_type:
          $ref: '#/components/schemas/ListingType'
          title: SaveUserSettings.default_listing_type
        interface_language:
          title: SaveUserSettings.interface_language
          type: string
        avatar:
          title: SaveUserSettings.avatar
          type: string
        banner:
          title: SaveUserSettings.banner
          type: string
        display_name:
          title: SaveUserSettings.display_name
          type: string
        email:
          title: SaveUserSettings.email
          type: string
        bio:
          title: SaveUserSettings.bio
          type: string
        matrix_user_id:
          title: SaveUserSettings.matrix_user_id
          type: string
        show_avatars:
          title: SaveUserSettings.show_avatars
          type: boolean
        send_notifications_to_email:
          title: SaveUserSettings.send_notifications_to_email
          type: boolean
        bot_account:
          title: SaveUserSettings.bot_account
          type: boolean
        show_bot_accounts:
          title: SaveUserSettings.show_bot_accounts
          type: boolean
        show_read_posts:
          title: SaveUserSettings.show_read_posts
          type: boolean
        discussion_languages:
          items:
            $ref: '#/components/schemas/LanguageId'
          title: SaveUserSettings.discussion_languages
          type: array
        open_links_in_new_tab:
          title: SaveUserSettings.open_links_in_new_tab
          type: boolean
        infinite_scroll_enabled:
          title: SaveUserSettings.infinite_scroll_enabled
          type: boolean
        post_listing_mode:
          $ref: '#/components/schemas/PostListingMode'
          title: SaveUserSettings.post_listing_mode
        enable_keyboard_navigation:
          title: SaveUserSettings.enable_keyboard_navigation
          type: boolean
        enable_animated_images:
          title: SaveUserSettings.enable_animated_images
          type: boolean
        collapse_bot_comments:
          title: SaveUserSettings.collapse_bot_comments
          type: boolean
        show_scores:
          title: SaveUserSettings.show_scores
          type: boolean
        show_upvotes:
          title: SaveUserSettings.show_upvotes
          type: boolean
        show_downvotes:
          title: SaveUserSettings.show_downvotes
          type: boolean
        show_upvote_percentage:
          title: SaveUserSettings.show_upvote_percentage
          type: boolean
      additionalProperties: false
      title: SaveUserSettings
      type: object
    Search:
      properties:
        q:
          title: Search.q
          type: string
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: Search.community_id
        community_name:
          title: Search.community_name
          type: string
        creator_id:
          $ref: '#/components/schemas/PersonId'
          title: Search.creator_id
        type_:
          $ref: '#/components/schemas/SearchType'
          title: Search.type_
        sort:
          $ref: '#/components/schemas/SortType'
          title: Search.sort
        listing_type:
          $ref: '#/components/schemas/ListingType'
          title: Search.listing_type
        page:
          title: Search.page
          type: integer
        limit:
          title: Search.limit
          type: integer
        post_title_only:
          title: Search.post_title_only
          type: boolean
      required:
        - q
      additionalProperties: false
      title: Search
      type: object
    SearchResponse:
      properties:
        type_:
          $ref: '#/components/schemas/SearchType'
          title: SearchResponse.type_
        comments:
          items:
            $ref: '#/components/schemas/CommentView'
          title: SearchResponse.comments
          type: array
        posts:
          items:
            $ref: '#/components/schemas/PostView'
          title: SearchResponse.posts
          type: array
        communities:
          items:
            $ref: '#/components/schemas/CommunityView'
          title: SearchResponse.communities
          type: array
        users:
          items:
            $ref: '#/components/schemas/PersonView'
          title: SearchResponse.users
          type: array
      required:
        - type_
        - comments
        - posts
        - communities
        - users
      additionalProperties: false
      title: SearchResponse
      type: object
    SearchType:
      enum:
        - All
        - Comments
        - Posts
        - Communities
        - Users
        - Url
      title: SearchType
      type: string
    Site:
      properties:
        id:
          $ref: '#/components/schemas/SiteId'
          title: Site.id
        name:
          title: Site.name
          type: string
        sidebar:
          title: Site.sidebar
          type: string
        published:
          title: Site.published
          type: string
        updated:
          title: Site.updated
          type: string
        icon:
          title: Site.icon
          type: string
        banner:
          title: Site.banner
          type: string
        description:
          title: Site.description
          type: string
        actor_id:
          title: Site.actor_id
          type: string
        last_refreshed_at:
          title: Site.last_refreshed_at
          type: string
        inbox_url:
          title: Site.inbox_url
          type: string
        public_key:
          title: Site.public_key
          type: string
        instance_id:
          $ref: '#/components/schemas/InstanceId'
          title: Site.instance_id
        content_warning:
          title: Site.content_warning
          type: string
      required:
        - id
        - name
        - published
        - actor_id
        - last_refreshed_at
        - inbox_url
        - public_key
        - instance_id
      additionalProperties: false
      title: Site
      type: object
    SiteAggregates:
      properties:
        site_id:
          $ref: '#/components/schemas/SiteId'
          title: SiteAggregates.site_id
        users:
          title: SiteAggregates.users
          type: integer
        posts:
          title: SiteAggregates.posts
          type: integer
        comments:
          title: SiteAggregates.comments
          type: integer
        communities:
          title: SiteAggregates.communities
          type: integer
        users_active_day:
          title: SiteAggregates.users_active_day
          type: integer
        users_active_week:
          title: SiteAggregates.users_active_week
          type: integer
        users_active_month:
          title: SiteAggregates.users_active_month
          type: integer
        users_active_half_year:
          title: SiteAggregates.users_active_half_year
          type: integer
      required:
        - site_id
        - users
        - posts
        - comments
        - communities
        - users_active_day
        - users_active_week
        - users_active_month
        - users_active_half_year
      additionalProperties: false
      title: SiteAggregates
      type: object
    SiteId:
      title: SiteId
      type: integer
    SiteResponse:
      properties:
        site_view:
          $ref: '#/components/schemas/SiteView'
          title: SiteResponse.site_view
        taglines:
          items:
            $ref: '#/components/schemas/Tagline'
          title: SiteResponse.taglines
          type: array
      required:
        - site_view
        - taglines
      additionalProperties: false
      title: SiteResponse
      type: object
    SiteView:
      properties:
        site:
          $ref: '#/components/schemas/Site'
          title: SiteView.site
        local_site:
          $ref: '#/components/schemas/LocalSite'
          title: SiteView.local_site
        local_site_rate_limit:
          $ref: '#/components/schemas/LocalSiteRateLimit'
          title: SiteView.local_site_rate_limit
        counts:
          $ref: '#/components/schemas/SiteAggregates'
          title: SiteView.counts
      required:
        - site
        - local_site
        - local_site_rate_limit
        - counts
      additionalProperties: false
      title: SiteView
      type: object
    SortType:
      enum:
        - Active
        - Hot
        - New
        - Old
        - TopDay
        - TopWeek
        - TopMonth
        - TopYear
        - TopAll
        - MostComments
        - NewComments
        - TopHour
        - TopSixHour
        - TopTwelveHour
        - TopThreeMonths
        - TopSixMonths
        - TopNineMonths
        - Controversial
        - Scaled
      title: SortType
      type: string
    SubscribedType:
      enum:
        - Subscribed
        - NotSubscribed
        - Pending
      title: SubscribedType
      type: string
    SuccessResponse:
      properties:
        success:
          title: SuccessResponse.success
          type: boolean
      required:
        - success
      additionalProperties: false
      title: SuccessResponse
      type: object
    Tagline:
      properties:
        id:
          title: Tagline.id
          type: integer
        local_site_id:
          $ref: '#/components/schemas/LocalSiteId'
          title: Tagline.local_site_id
        content:
          title: Tagline.content
          type: string
        published:
          title: Tagline.published
          type: string
        updated:
          title: Tagline.updated
          type: string
      required:
        - id
        - local_site_id
        - content
        - published
      additionalProperties: false
      title: Tagline
      type: object
    TransferCommunity:
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
          title: TransferCommunity.community_id
        person_id:
          $ref: '#/components/schemas/PersonId'
          title: TransferCommunity.person_id
      required:
        - community_id
        - person_id
      additionalProperties: false
      title: TransferCommunity
      type: object
    UpdateTotp:
      properties:
        totp_token:
          title: UpdateTotp.totp_token
          type: string
        enabled:
          title: UpdateTotp.enabled
          type: boolean
      required:
        - totp_token
        - enabled
      additionalProperties: false
      title: UpdateTotp
      type: object
    UpdateTotpResponse:
      properties:
        enabled:
          title: UpdateTotpResponse.enabled
          type: boolean
      required:
        - enabled
      additionalProperties: false
      title: UpdateTotpResponse
      type: object
    VerifyEmail:
      properties:
        token:
          title: VerifyEmail.token
          type: string
      required:
        - token
      additionalProperties: false
      title: VerifyEmail
      type: object
    VoteView:
      properties:
        creator:
          $ref: '#/components/schemas/Person'
          title: VoteView.creator
        creator_banned_from_community:
          title: VoteView.creator_banned_from_community
          type: boolean
        score:
          title: VoteView.score
          type: integer
      required:
        - creator
        - creator_banned_from_community
        - score
      additionalProperties: false
      title: VoteView
      type: object
